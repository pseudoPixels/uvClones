<potential_clones>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="89" endline="91">
public DrawApplication () {
    this ("JHotDraw");
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="96" endline="100">
public DrawApplication (String title) {
    super (title);
    setApplicationName (title);
    winCount ++;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="108" endline="110">
protected DrawApplication createApplication () {
    return new DrawApplication ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="116" endline="128">
public void newView () {
    if (view () == null) {
        return;
    }
    DrawApplication window = createApplication ();
    window.open (view ());
    if (view ().drawing ().getTitle () != null) {
        window.setDrawingTitle (view ().drawing ().getTitle () + " (View)");
    } else {
        window.setDrawingTitle (getDefaultDrawingTitle () + " (View)");
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="134" endline="142">
public void newWindow (Drawing initialDrawing) {
    DrawApplication window = createApplication ();
    if (initialDrawing == null) {
        window.open ();
    } else {
        window.open (window.createDrawingView (initialDrawing));
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="144" endline="146">
public final void newWindow () {
    newWindow (createDrawing ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="150" endline="152">
public void open () {
    open (createInitialDrawingView ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="157" endline="228">
protected void open (final DrawingView newDrawingView) {
    getVersionControlStrategy ().assertCompatibleVersion ();
    setUndoManager (new UndoManager ());
    setIconkit (createIconkit ());
    getContentPane ().setLayout (new BorderLayout ());
    setStatusLine (createStatusLine ());
    getContentPane ().add (getStatusLine (), BorderLayout.SOUTH);
    setTool (new NullTool (this), "");
    setView (newDrawingView);
    JToolBar tools = createToolPalette ();
    createTools (tools);
    JPanel activePanel = new JPanel ();
    activePanel.setAlignmentX (LEFT_ALIGNMENT);
    activePanel.setAlignmentY (TOP_ALIGNMENT);
    activePanel.setLayout (new BorderLayout ());
    activePanel.add (tools, BorderLayout.NORTH);
    setDesktopListener (createDesktopListener ());
    setDesktop (createDesktop ());
    activePanel.add ((Component) getDesktop (), BorderLayout.CENTER);
    getContentPane ().add (activePanel, BorderLayout.CENTER);
    JMenuBar mb = new JMenuBar ();
    createMenus (mb);
    setJMenuBar (mb);
    Dimension d = defaultSize ();
    if (d.width > mb.getPreferredSize ().width) {
        setSize (d.width, d.height);
    } else {
        setSize (mb.getPreferredSize ().width, d.height);
    }
    addListeners ();
    setStorageFormatManager (createStorageFormatManager ());
    Runnable r = new Runnable () {
        public void run () {
            if (newDrawingView.isInteractive ()) {
                getDesktop ().addToDesktop (newDrawingView, Desktop.PRIMARY);
            }
            toolDone ();
        }}

    ;
    if (java.awt.EventQueue.isDispatchThread () == false) {
        try {
            java.awt.EventQueue.invokeAndWait (r);
        } catch (java.lang.InterruptedException ie) {
            System.err.println (ie.getMessage ());
            exit ();
        } catch (java.lang.reflect.InvocationTargetException ite) {
            System.err.println (ite.getMessage ());
            exit ();
        }
    } else {
        r.run ();
    }
    setVisible (true);
    toolDone ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="201" endline="206">
public void run () {
    if (newDrawingView.isInteractive ()) {
        getDesktop ().addToDesktop (newDrawingView, Desktop.PRIMARY);
    }
    toolDone ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="233" endline="241">
protected void addListeners () {
    addWindowListener (new WindowAdapter () {
        public void windowClosing (WindowEvent event) {
            exit ();
        }}

    );
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="236" endline="238">
public void windowClosing (WindowEvent event) {
    exit ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="247" endline="253">
protected void createMenus (JMenuBar mb) {
    addMenuIfPossible (mb, createFileMenu ());
    addMenuIfPossible (mb, createEditMenu ());
    addMenuIfPossible (mb, createAlignmentMenu ());
    addMenuIfPossible (mb, createAttributesMenu ());
    addMenuIfPossible (mb, createDebugMenu ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="255" endline="259">
protected void addMenuIfPossible (JMenuBar mb, JMenu newMenu) {
    if (newMenu != null) {
        mb.add (newMenu);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="265" endline="304">
protected JMenu createFileMenu () {
    CommandMenu menu = new CommandMenu ("File");
    Command cmd = new AbstractCommand ("New", this, false) {
        public void execute () {
            promptNew ();
        }}

    ;
    menu.add (cmd, new MenuShortcut ('n'));
    cmd = new AbstractCommand ("Open...", this, false) {
        public void execute () {
            promptOpen ();
        }}

    ;
    menu.add (cmd, new MenuShortcut ('o'));
    cmd = new AbstractCommand ("Save As...", this, true) {
        public void execute () {
            promptSaveAs ();
        }}

    ;
    menu.add (cmd, new MenuShortcut ('s'));
    menu.addSeparator ();
    cmd = new AbstractCommand ("Print...", this, true) {
        public void execute () {
            print ();
        }}

    ;
    menu.add (cmd, new MenuShortcut ('p'));
    menu.addSeparator ();
    cmd = new AbstractCommand ("Exit", this, true) {
        public void execute () {
            exit ();
        }}

    ;
    menu.add (cmd);
    return menu;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="268" endline="270">
public void execute () {
    promptNew ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="275" endline="277">
public void execute () {
    promptOpen ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="282" endline="284">
public void execute () {
    promptSaveAs ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="290" endline="292">
public void execute () {
    print ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="298" endline="300">
public void execute () {
    exit ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="310" endline="334">
protected JMenu createEditMenu () {
    CommandMenu menu = new CommandMenu ("Edit");
    menu.add (new UndoableCommand (new SelectAllCommand ("Select All", this)), new MenuShortcut ('a'));
    menu.addSeparator ();
    menu.add (new UndoableCommand (new CutCommand ("Cut", this)), new MenuShortcut ('x'));
    menu.add (new CopyCommand ("Copy", this), new MenuShortcut ('c'));
    menu.add (new UndoableCommand (new PasteCommand ("Paste", this)), new MenuShortcut ('v'));
    menu.addSeparator ();
    menu.add (new UndoableCommand (new DuplicateCommand ("Duplicate", this)), new MenuShortcut ('d'));
    menu.add (new UndoableCommand (new DeleteCommand ("Delete", this)));
    menu.addSeparator ();
    menu.add (new UndoableCommand (new GroupCommand ("Group", this)));
    menu.add (new UndoableCommand (new UngroupCommand ("Ungroup", this)));
    menu.addSeparator ();
    menu.add (new UndoableCommand (new SendToBackCommand ("Send to Back", this)));
    menu.add (new UndoableCommand (new BringToFrontCommand ("Bring to Front", this)));
    menu.addSeparator ();
    menu.add (new UndoCommand ("Undo Command", this));
    menu.add (new RedoCommand ("Redo Command", this));
    return menu;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="340" endline="358">
protected JMenu createAlignmentMenu () {
    CommandMenu menu = new CommandMenu ("Align");
    menu.addCheckItem (new ToggleGridCommand ("Toggle Snap to Grid", this, new Point (4, 4)));
    menu.addSeparator ();
    menu.add (new UndoableCommand (new AlignCommand (AlignCommand.Alignment.LEFTS, this)));
    menu.add (new UndoableCommand (new AlignCommand (AlignCommand.Alignment.CENTERS, this)));
    menu.add (new UndoableCommand (new AlignCommand (AlignCommand.Alignment.RIGHTS, this)));
    menu.addSeparator ();
    menu.add (new UndoableCommand (new AlignCommand (AlignCommand.Alignment.TOPS, this)));
    menu.add (new UndoableCommand (new AlignCommand (AlignCommand.Alignment.MIDDLES, this)));
    menu.add (new UndoableCommand (new AlignCommand (AlignCommand.Alignment.BOTTOMS, this)));
    return menu;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="364" endline="381">
protected JMenu createDebugMenu () {
    CommandMenu menu = new CommandMenu ("Debug");
    Command cmd = new AbstractCommand ("Simple Update", this) {
        public void execute () {
            this.view ().setDisplayUpdate (new SimpleUpdateStrategy ());
        }}

    ;
    menu.add (cmd);
    cmd = new AbstractCommand ("Buffered Update", this) {
        public void execute () {
            this.view ().setDisplayUpdate (new BufferedUpdateStrategy ());
        }}

    ;
    menu.add (cmd);
    return menu;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="368" endline="370">
public void execute () {
    this.view ().setDisplayUpdate (new SimpleUpdateStrategy ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="375" endline="377">
public void execute () {
    this.view ().setDisplayUpdate (new BufferedUpdateStrategy ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="387" endline="398">
protected JMenu createAttributesMenu () {
    JMenu menu = new JMenu ("Attributes");
    menu.add (createColorMenu ("Fill Color", FigureAttributeConstant.FILL_COLOR));
    menu.add (createColorMenu ("Pen Color", FigureAttributeConstant.FRAME_COLOR));
    menu.add (createArrowMenu ());
    menu.addSeparator ();
    menu.add (createFontMenu ());
    menu.add (createFontSizeMenu ());
    menu.add (createFontStyleMenu ());
    menu.add (createColorMenu ("Text Color", FigureAttributeConstant.TEXT_COLOR));
    return menu;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="403" endline="417">
protected JMenu createColorMenu (String title, FigureAttributeConstant attribute) {
    CommandMenu menu = new CommandMenu (title);
    for (int i = 0;
    i < ColorMap.size (); i ++) menu.add (new UndoableCommand (new ChangeAttributeCommand (ColorMap.name (i), attribute, ColorMap.color (i), this)));

    return menu;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="422" endline="434">
protected JMenu createArrowMenu () {
    FigureAttributeConstant arrowMode = FigureAttributeConstant.ARROW_MODE;
    CommandMenu menu = new CommandMenu ("Arrow");
    menu.add (new UndoableCommand (new ChangeAttributeCommand ("none", arrowMode, new Integer (PolyLineFigure.ARROW_TIP_NONE), this)));
    menu.add (new UndoableCommand (new ChangeAttributeCommand ("at Start", arrowMode, new Integer (PolyLineFigure.ARROW_TIP_START), this)));
    menu.add (new UndoableCommand (new ChangeAttributeCommand ("at End", arrowMode, new Integer (PolyLineFigure.ARROW_TIP_END), this)));
    menu.add (new UndoableCommand (new ChangeAttributeCommand ("at Both", arrowMode, new Integer (PolyLineFigure.ARROW_TIP_BOTH), this)));
    return menu;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="440" endline="448">
protected JMenu createFontMenu () {
    CommandMenu menu = new CommandMenu ("Font");
    String fonts [] = Toolkit.getDefaultToolkit ().getFontList ();
    for (int i = 0;
    i < fonts.length; i ++) {
        menu.add (new UndoableCommand (new ChangeAttributeCommand (fonts [i], FigureAttributeConstant.FONT_NAME, fonts [i], this)));
    }
    return menu;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="453" endline="463">
protected JMenu createFontStyleMenu () {
    FigureAttributeConstant fontStyle = FigureAttributeConstant.FONT_STYLE;
    CommandMenu menu = new CommandMenu ("Font Style");
    menu.add (new UndoableCommand (new ChangeAttributeCommand ("Plain", fontStyle, new Integer (Font.PLAIN), this)));
    menu.add (new UndoableCommand (new ChangeAttributeCommand ("Italic", fontStyle, new Integer (Font.ITALIC), this)));
    menu.add (new UndoableCommand (new ChangeAttributeCommand ("Bold", fontStyle, new Integer (Font.BOLD), this)));
    return menu;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="468" endline="484">
protected JMenu createFontSizeMenu () {
    CommandMenu menu = new CommandMenu ("Font Size");
    int sizes [] = {9, 10, 12, 14, 18, 24, 36, 48, 72};
    for (int i = 0;
    i < sizes.length; i ++) {
        menu.add (new UndoableCommand (new ChangeAttributeCommand (Integer.toString (sizes [i]), FigureAttributeConstant.FONT_SIZE, new Integer (sizes [i]), this)));
    }
    return menu;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="489" endline="504">
public JMenu createLookAndFeelMenu () {
    CommandMenu menu = new CommandMenu ("Look'n'Feel");
    UIManager.LookAndFeelInfo [] lafs = UIManager.getInstalledLookAndFeels ();
    for (int i = 0;
    i < lafs.length; i ++) {
        final String lnfClassName = lafs [i].getClassName ();
        Command cmd = new AbstractCommand (lafs [i].getName (), this) {
            public void execute () {
                newLookAndFeel (lnfClassName);
            }}

        ;
        menu.add (cmd);
    }
    return menu;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="497" endline="499">
public void execute () {
    newLookAndFeel (lnfClassName);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="509" endline="515">
protected JToolBar createToolPalette () {
    JToolBar palette = new JToolBar ();
    palette.setBackground (Color.lightGray);
    return palette;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="523" endline="526">
protected void createTools (JToolBar palette) {
    setDefaultTool (createDefaultTool ());
    palette.add (fDefaultToolButton);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="532" endline="534">
protected Tool createSelectionTool () {
    return new SelectionTool (this);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="536" endline="538">
protected Tool createDefaultTool () {
    return createSelectionTool ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="540" endline="547">
protected void setDefaultTool (Tool newDefaultTool) {
    if (newDefaultTool != null) {
        fDefaultToolButton = createToolButton (IMAGES + "SEL", "Selection Tool", newDefaultTool);
    } else {
        fDefaultToolButton = null;
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="549" endline="556">
public Tool getDefaultTool () {
    if (fDefaultToolButton != null) {
        return fDefaultToolButton.tool ();
    } else {
        return null;
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="561" endline="563">
protected ToolButton createToolButton (String iconName, String toolName, Tool tool) {
    return new ToolButton (this, iconName, toolName, tool);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="571" endline="575">
protected DrawingView createDrawingView () {
    DrawingView createdDrawingView = createDrawingView (createDrawing ());
    createdDrawingView.drawing ().setTitle (getDefaultDrawingTitle ());
    return createdDrawingView;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="577" endline="584">
protected DrawingView createDrawingView (Drawing newDrawing) {
    Dimension d = getDrawingViewSize ();
    DrawingView newDrawingView = new StandardDrawingView (this, d.width, d.height);
    newDrawingView.setDrawing (newDrawing);
    return newDrawingView;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="596" endline="598">
protected DrawingView createInitialDrawingView () {
    return createDrawingView ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="603" endline="605">
protected Dimension getDrawingViewSize () {
    return new Dimension (800, 800);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="613" endline="615">
protected Drawing createDrawing () {
    return new StandardDrawing ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="617" endline="620">
protected Desktop createDesktop () {
    return new JPanelDesktop (this);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="622" endline="625">
protected void setDesktop (Desktop newDesktop) {
    newDesktop.addDesktopListener (getDesktopListener ());
    fDesktop = newDesktop;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="631" endline="633">
public Desktop getDesktop () {
    return fDesktop;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="640" endline="647">
public StorageFormatManager createStorageFormatManager () {
    StorageFormatManager storageFormatManager = new StorageFormatManager ();
    storageFormatManager.setDefaultStorageFormat (new StandardStorageFormat ());
    storageFormatManager.addStorageFormat (storageFormatManager.getDefaultStorageFormat ());
    storageFormatManager.addStorageFormat (new SerializationStorageFormat ());
    return storageFormatManager;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="653" endline="655">
protected final void setStorageFormatManager (StorageFormatManager newStorageFormatManager) {
    fStorageFormatManager = newStorageFormatManager;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="661" endline="663">
public StorageFormatManager getStorageFormatManager () {
    return fStorageFormatManager;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="668" endline="670">
protected Dimension defaultSize () {
    return new Dimension (600, 450);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="675" endline="680">
protected JTextField createStatusLine () {
    JTextField field = new JTextField ("No Tool", 40);
    field.setBackground (Color.white);
    field.setEditable (false);
    return field;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="682" endline="684">
private void setStatusLine (JTextField newStatusLine) {
    fStatusLine = newStatusLine;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="686" endline="688">
protected JTextField getStatusLine () {
    return fStatusLine;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="694" endline="698">
public void paletteUserSelected (PaletteButton paletteButton) {
    ToolButton toolButton = (ToolButton) paletteButton;
    setTool (toolButton.tool (), toolButton.name ());
    setSelected (toolButton);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="704" endline="712">
public void paletteUserOver (PaletteButton paletteButton, boolean inside) {
    ToolButton toolButton = (ToolButton) paletteButton;
    if (inside) {
        showStatus (toolButton.name ());
    } else if (fSelectedToolButton != null) {
        showStatus (fSelectedToolButton.name ());
    }

}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="718" endline="720">
public Tool tool () {
    return fTool;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="727" endline="729">
public DrawingView view () {
    return fView;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="731" endline="735">
protected void setView (DrawingView newView) {
    DrawingView oldView = fView;
    fView = newView;
    fireViewSelectionChangedEvent (oldView, view ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="737" endline="739">
public DrawingView [] views () {
    return new DrawingView [] {view ()};
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="745" endline="751">
public void toolDone () {
    System.out.println ("ToolDone");
    if (fDefaultToolButton != null) {
        setTool (fDefaultToolButton.tool (), fDefaultToolButton.name ());
        setSelected (fDefaultToolButton);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="762" endline="764">
public void figureSelectionChanged (DrawingView view) {
    checkCommandMenus ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="766" endline="775">
protected void checkCommandMenus () {
    JMenuBar mb = getJMenuBar ();
    for (int x = 0;
    x < mb.getMenuCount (); x ++) {
        JMenu jm = mb.getMenu (x);
        if (CommandMenu.class.isInstance (jm)) {
            checkCommandMenu ((CommandMenu) jm);
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="777" endline="785">
protected void checkCommandMenu (CommandMenu cm) {
    cm.checkEnabled ();
    for (int y = 0;
    y < cm.getItemCount (); y ++) {
        JMenuItem jmi = cm.getItem (y);
        if (CommandMenu.class.isInstance (jmi)) {
            checkCommandMenu ((CommandMenu) jmi);
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="791" endline="793">
public void addViewChangeListener (ViewChangeListener vsl) {
    listenerList.add (ViewChangeListener.class, vsl);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="798" endline="800">
public void removeViewChangeListener (ViewChangeListener vsl) {
    listenerList.remove (ViewChangeListener.class, vsl);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="808" endline="817">
protected void fireViewSelectionChangedEvent (DrawingView oldView, DrawingView newView) {
    final Object [] listeners = listenerList.getListenerList ();
    ViewChangeListener vsl = null;
    for (int i = listeners.length - 2;
    i >= 0; i -= 2) {
        if (listeners [i] == ViewChangeListener.class) {
            vsl = (ViewChangeListener) listeners [i + 1];
            vsl.viewSelectionChanged (oldView, newView);
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="819" endline="828">
protected void fireViewCreatedEvent (DrawingView view) {
    final Object [] listeners = listenerList.getListenerList ();
    ViewChangeListener vsl = null;
    for (int i = listeners.length - 2;
    i >= 0; i -= 2) {
        if (listeners [i] == ViewChangeListener.class) {
            vsl = (ViewChangeListener) listeners [i + 1];
            vsl.viewCreated (view);
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="830" endline="839">
protected void fireViewDestroyingEvent (DrawingView view) {
    final Object [] listeners = listenerList.getListenerList ();
    ViewChangeListener vsl = null;
    for (int i = listeners.length - 2;
    i >= 0; i -= 2) {
        if (listeners [i] == ViewChangeListener.class) {
            vsl = (ViewChangeListener) listeners [i + 1];
            vsl.viewDestroying (view);
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="845" endline="847">
public void showStatus (String string) {
    getStatusLine ().setText (string);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="857" endline="869">
public void setTool (Tool t, String name) {
    if ((tool () != null) && (tool ().isActive ())) {
        tool ().deactivate ();
    }
    fTool = t;
    if (tool () != null) {
        showStatus (name);
        tool ().activate ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="871" endline="879">
private void setSelected (ToolButton button) {
    if (fSelectedToolButton != null) {
        fSelectedToolButton.reset ();
    }
    fSelectedToolButton = button;
    if (fSelectedToolButton != null) {
        fSelectedToolButton.select ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="884" endline="892">
public void exit () {
    destroy ();
    setVisible (false);
    dispose ();
    winCount --;
    if (winCount == 0) {
        System.exit (0);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="898" endline="899">
protected void destroy () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="904" endline="908">
public void promptNew () {
    newWindow (createDrawing ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="913" endline="926">
public void promptOpen () {
    toolDone ();
    JFileChooser openDialog = createOpenFileChooser ();
    getStorageFormatManager ().registerFileFilters (openDialog);
    if (openDialog.showOpenDialog (this) == JFileChooser.APPROVE_OPTION) {
        StorageFormat foundFormat = getStorageFormatManager ().findStorageFormat (openDialog.getFileFilter ());
        if (foundFormat != null) {
            loadDrawing (foundFormat, openDialog.getSelectedFile ().getAbsolutePath ());
        } else {
            showStatus ("Not a valid file format: " + openDialog.getFileFilter ().getDescription ());
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="931" endline="947">
public void promptSaveAs () {
    if (view () != null) {
        toolDone ();
        JFileChooser saveDialog = createSaveFileChooser ();
        getStorageFormatManager ().registerFileFilters (saveDialog);
        if (saveDialog.showSaveDialog (this) == JFileChooser.APPROVE_OPTION) {
            StorageFormat foundFormat = getStorageFormatManager ().findStorageFormat (saveDialog.getFileFilter ());
            if (foundFormat != null) {
                saveDrawing (foundFormat, saveDialog.getSelectedFile ().getAbsolutePath ());
            } else {
                showStatus ("Not a valid file format: " + saveDialog.getFileFilter ().getDescription ());
            }
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="953" endline="957">
protected JFileChooser createOpenFileChooser () {
    JFileChooser openDialog = new JFileChooser ();
    openDialog.setDialogTitle ("Open File...");
    return openDialog;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="963" endline="967">
protected JFileChooser createSaveFileChooser () {
    JFileChooser saveDialog = new JFileChooser ();
    saveDialog.setDialogTitle ("Save File...");
    return saveDialog;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="972" endline="986">
public void print () {
    tool ().deactivate ();
    PrintJob printJob = getToolkit ().getPrintJob (this, "Print Drawing", null);
    if (printJob != null) {
        Graphics pg = printJob.getGraphics ();
        if (pg != null) {
            ((StandardDrawingView) view ()).printAll (pg);
            pg.dispose ();
        }
        printJob.end ();
    }
    tool ().activate ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="991" endline="1004">
protected void saveDrawing (StorageFormat storeFormat, String file) {
    if (view () == null) {
        return;
    }
    try {
        String name = storeFormat.store (file, view ().drawing ());
        view ().drawing ().setTitle (name);
        setDrawingTitle (name);
    } catch (IOException e) {
        showStatus (e.toString ());
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1009" endline="1023">
protected void loadDrawing (StorageFormat restoreFormat, String file) {
    try {
        Drawing restoredDrawing = restoreFormat.restore (file);
        if (restoredDrawing != null) {
            restoredDrawing.setTitle (file);
            newWindow (restoredDrawing);
        } else {
            showStatus ("Unknown file type: could not open file '" + file + "'");
        }
    } catch (IOException e) {
        showStatus ("Error: " + e);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1028" endline="1036">
private void newLookAndFeel (String landf) {
    try {
        UIManager.setLookAndFeel (landf);
        SwingUtilities.updateComponentTreeUI (this);
    } catch (Exception e) {
        System.err.println (e);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1041" endline="1048">
protected void setDrawingTitle (String drawingTitle) {
    if (getDefaultDrawingTitle ().equals (drawingTitle)) {
        setTitle (getApplicationName ());
    } else {
        setTitle (getApplicationName () + " - " + drawingTitle);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1053" endline="1055">
protected String getDrawingTitle () {
    return view ().drawing ().getTitle ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1060" endline="1062">
public void setApplicationName (String applicationName) {
    fApplicationName = applicationName;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1067" endline="1069">
public String getApplicationName () {
    return fApplicationName;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1071" endline="1073">
protected void setUndoManager (UndoManager newUndoManager) {
    myUndoManager = newUndoManager;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1075" endline="1077">
public UndoManager getUndoManager () {
    return myUndoManager;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1079" endline="1081">
protected VersionControlStrategy getVersionControlStrategy () {
    return new StandardVersionControlStrategy (this);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1091" endline="1096">
public String [] getRequiredVersions () {
    String [] requiredVersions = new String [1];
    requiredVersions [0] = VersionManagement.getPackageVersion (DrawApplication.class.getPackage ());
    return requiredVersions;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1098" endline="1100">
public String getDefaultDrawingTitle () {
    return fgUntitled;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1102" endline="1104">
protected DesktopListener getDesktopListener () {
    return fDesktopListener;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1106" endline="1108">
protected void setDesktopListener (DesktopListener desktopPaneListener) {
    fDesktopListener = desktopPaneListener;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1110" endline="1134">
protected DesktopListener createDesktopListener () {
    return new DesktopListener () {
        public void drawingViewAdded (DesktopEvent dpe) {
            DrawingView dv = dpe.getDrawingView ();
            fireViewCreatedEvent (dv);
        } public void drawingViewRemoved (DesktopEvent dpe) {
            DrawingView dv = dpe.getDrawingView ();
            getUndoManager ().clearUndos (dv);
            getUndoManager ().clearRedos (dv);
            fireViewDestroyingEvent (dv);
            checkCommandMenus ();
        } public void drawingViewSelected (DesktopEvent dpe) {
            DrawingView dv = dpe.getDrawingView ();
            if (dv != null) {
                if (dv.drawing () != null) dv.unfreezeView ();

            }
            setView (dv);
        }}

    ;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1112" endline="1115">
public void drawingViewAdded (DesktopEvent dpe) {
    DrawingView dv = dpe.getDrawingView ();
    fireViewCreatedEvent (dv);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1116" endline="1123">
public void drawingViewRemoved (DesktopEvent dpe) {
    DrawingView dv = dpe.getDrawingView ();
    getUndoManager ().clearUndos (dv);
    getUndoManager ().clearRedos (dv);
    fireViewDestroyingEvent (dv);
    checkCommandMenus ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1124" endline="1132">
public void drawingViewSelected (DesktopEvent dpe) {
    DrawingView dv = dpe.getDrawingView ();
    if (dv != null) {
        if (dv.drawing () != null) dv.unfreezeView ();

    }
    setView (dv);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1136" endline="1138">
protected Iconkit createIconkit () {
    return new Iconkit (this);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1140" endline="1142">
protected void setIconkit (Iconkit newIconkit) {
    fIconkit = newIconkit;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/application/DrawApplication.java" startline="1144" endline="1146">
protected Iconkit getIconkit () {
    return fIconkit;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="66" endline="92">
public void init () {
    createIconkit ();
    getVersionControlStrategy ().assertCompatibleVersion ();
    setUndoManager (new UndoManager ());
    getContentPane ().setLayout (new BorderLayout ());
    fView = createDrawingView ();
    JPanel attributes = createAttributesPanel ();
    createAttributeChoices (attributes);
    getContentPane ().add ("North", attributes);
    JPanel toolPanel = createToolPalette ();
    createTools (toolPanel);
    getContentPane ().add ("West", toolPanel);
    getContentPane ().add ("Center", (Component) view ());
    JPanel buttonPalette = createButtonPanel ();
    createButtons (buttonPalette);
    getContentPane ().add ("South", buttonPalette);
    initDrawing ();
    setupAttributes ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="94" endline="95">
public void addViewChangeListener (ViewChangeListener vsl) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="97" endline="98">
public void removeViewChangeListener (ViewChangeListener vsl) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="100" endline="102">
protected Iconkit createIconkit () {
    return new Iconkit (this);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="122" endline="126">
protected JPanel createAttributesPanel () {
    JPanel panel = new JPanel ();
    panel.setLayout (new PaletteLayout (2, new Point (2, 2), false));
    return panel;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="132" endline="158">
protected void createAttributeChoices (JPanel panel) {
    panel.add (new JLabel ("Fill"));
    fFillColor = createColorChoice (FigureAttributeConstant.FILL_COLOR);
    panel.add (fFillColor);
    panel.add (new JLabel ("Text"));
    fTextColor = createColorChoice (FigureAttributeConstant.TEXT_COLOR);
    panel.add (fTextColor);
    panel.add (new JLabel ("Pen"));
    fFrameColor = createColorChoice (FigureAttributeConstant.FRAME_COLOR);
    panel.add (fFrameColor);
    panel.add (new JLabel ("Arrow"));
    CommandChoice choice = new CommandChoice ();
    fArrowChoice = choice;
    FigureAttributeConstant arrowMode = FigureAttributeConstant.ARROW_MODE;
    choice.addItem (new ChangeAttributeCommand ("none", arrowMode, new Integer (PolyLineFigure.ARROW_TIP_NONE), this));
    choice.addItem (new ChangeAttributeCommand ("at Start", arrowMode, new Integer (PolyLineFigure.ARROW_TIP_START), this));
    choice.addItem (new ChangeAttributeCommand ("at End", arrowMode, new Integer (PolyLineFigure.ARROW_TIP_END), this));
    choice.addItem (new ChangeAttributeCommand ("at Both", arrowMode, new Integer (PolyLineFigure.ARROW_TIP_BOTH), this));
    panel.add (fArrowChoice);
    panel.add (new JLabel ("Font"));
    fFontChoice = createFontChoice ();
    panel.add (fFontChoice);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="163" endline="175">
protected JComboBox createColorChoice (FigureAttributeConstant attribute) {
    CommandChoice choice = new CommandChoice ();
    for (int i = 0;
    i < ColorMap.size (); i ++) choice.addItem (new ChangeAttributeCommand (ColorMap.name (i), attribute, ColorMap.color (i), this));

    return choice;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="181" endline="188">
protected JComboBox createFontChoice () {
    CommandChoice choice = new CommandChoice ();
    String fonts [] = Toolkit.getDefaultToolkit ().getFontList ();
    for (int i = 0;
    i < fonts.length; i ++) {
        choice.addItem (new ChangeAttributeCommand (fonts [i], FigureAttributeConstant.FONT_NAME, fonts [i], this));
    }
    return choice;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="193" endline="197">
protected JPanel createButtonPanel () {
    JPanel panel = new JPanel ();
    panel.setLayout (new PaletteLayout (2, new Point (2, 2), false));
    return panel;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="204" endline="276">
protected void createButtons (JPanel panel) {
    panel.add (new Filler (24, 20));
    JComboBox drawingChoice = new JComboBox ();
    drawingChoice.addItem (fgUntitled);
    String param = getParameter ("DRAWINGS");
    if (param == null) {
        param = "";
    }
    StringTokenizer st = new StringTokenizer (param);
    while (st.hasMoreTokens ()) {
        drawingChoice.addItem (st.nextToken ());
    }
    if (drawingChoice.getItemCount () > 1) {
        panel.add (drawingChoice);
    } else {
        panel.add (new JLabel (fgUntitled));
    }
    drawingChoice.addItemListener (new ItemListener () {
        public void itemStateChanged (ItemEvent e) {
            if (e.getStateChange () == ItemEvent.SELECTED) {
                loadDrawing ((String) e.getItem ());
            }
        }}

    );
    panel.add (new Filler (6, 20));
    JButton button;
    button = new CommandButton (new DeleteCommand ("Delete", this));
    panel.add (button);
    button = new CommandButton (new DuplicateCommand ("Duplicate", this));
    panel.add (button);
    button = new CommandButton (new GroupCommand ("Group", this));
    panel.add (button);
    button = new CommandButton (new UngroupCommand ("Ungroup", this));
    panel.add (button);
    button = new JButton ("Help");
    button.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent event) {
            showHelp ();
        }}

    );
    panel.add (button);
    fUpdateButton = new JButton ("Simple Update");
    fUpdateButton.addActionListener (new ActionListener () {
        public void actionPerformed (ActionEvent event) {
            if (fSimpleUpdate) {
                setBufferedDisplayUpdate ();
            } else {
                setSimpleDisplayUpdate ();
            }
        }}

    );
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="228" endline="232">
public void itemStateChanged (ItemEvent e) {
    if (e.getStateChange () == ItemEvent.SELECTED) {
        loadDrawing ((String) e.getItem ());
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="254" endline="256">
public void actionPerformed (ActionEvent event) {
    showHelp ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="264" endline="271">
public void actionPerformed (ActionEvent event) {
    if (fSimpleUpdate) {
        setBufferedDisplayUpdate ();
    } else {
        setSimpleDisplayUpdate ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="281" endline="285">
protected JPanel createToolPalette () {
    JPanel palette = new JPanel ();
    palette.setLayout (new PaletteLayout (2, new Point (2, 2)));
    return palette;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="293" endline="298">
protected void createTools (JPanel palette) {
    Tool tool = createSelectionTool ();
    fDefaultToolButton = createToolButton (IMAGES + "SEL", "Selection Tool", tool);
    palette.add (fDefaultToolButton);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="304" endline="306">
protected Tool createSelectionTool () {
    return new SelectionTool (this);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="311" endline="313">
protected ToolButton createToolButton (String iconName, String toolName, Tool tool) {
    return new ToolButton (this, iconName, toolName, tool);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="321" endline="323">
protected Drawing createDrawing () {
    return new StandardDrawing ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="331" endline="333">
protected DrawingView createDrawingView () {
    return new StandardDrawingView (this, 410, 370);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="339" endline="343">
public void paletteUserSelected (PaletteButton button) {
    ToolButton toolButton = (ToolButton) button;
    setTool (toolButton.tool (), toolButton.name ());
    setSelected (toolButton);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="349" endline="356">
public void paletteUserOver (PaletteButton button, boolean inside) {
    if (inside) {
        showStatus (button.name ());
    } else if (fSelectedToolButton != null) {
        showStatus (fSelectedToolButton.name ());
    }

}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="362" endline="364">
public Drawing drawing () {
    return fDrawing;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="370" endline="372">
public Tool tool () {
    return fTool;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="378" endline="380">
public DrawingView view () {
    return fView;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="382" endline="384">
public DrawingView [] views () {
    return new DrawingView [] {view ()};
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="390" endline="393">
public void toolDone () {
    setTool (fDefaultToolButton.tool (), fDefaultToolButton.name ());
    setSelected (fDefaultToolButton);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="400" endline="402">
public void figureSelectionChanged (DrawingView view) {
    setupAttributes ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="404" endline="405">
public void viewSelectionChanged (DrawingView oldView, DrawingView newView) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="407" endline="411">
private void initDrawing () {
    fDrawing = createDrawing ();
    view ().setDrawing (fDrawing);
    toolDone ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="413" endline="422">
private void setTool (Tool t, String name) {
    if (fTool != null) {
        fTool.deactivate ();
    }
    fTool = t;
    if (fTool != null) {
        showStatus (name);
        fTool.activate ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="424" endline="432">
private void setSelected (ToolButton button) {
    if (fSelectedToolButton != null) {
        fSelectedToolButton.reset ();
    }
    fSelectedToolButton = button;
    if (fSelectedToolButton != null) {
        fSelectedToolButton.select ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="434" endline="445">
protected void loadDrawing (String param) {
    if (param == fgUntitled) {
        fDrawing.release ();
        initDrawing ();
        return;
    }
    String filename = getParameter (param);
    if (filename != null) {
        readDrawing (filename);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="447" endline="459">
private void readDrawing (String filename) {
    toolDone ();
    String type = guessType (filename);
    if (type.equals ("storable")) {
        readFromStorableInput (filename);
    } else if (type.equals ("serialized")) {
        readFromObjectInput (filename);
    } else {
        showStatus ("Unknown file type");
    }

}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="461" endline="475">
private void readFromStorableInput (String filename) {
    try {
        URL url = new URL (getCodeBase (), filename);
        InputStream stream = url.openStream ();
        StorableInput input = new StorableInput (stream);
        fDrawing.release ();
        fDrawing = (Drawing) input.readStorable ();
        view ().setDrawing (fDrawing);
    } catch (IOException e) {
        initDrawing ();
        showStatus ("Error:" + e);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="477" endline="494">
private void readFromObjectInput (String filename) {
    try {
        URL url = new URL (getCodeBase (), filename);
        InputStream stream = url.openStream ();
        ObjectInput input = new ObjectInputStream (stream);
        fDrawing.release ();
        fDrawing = (Drawing) input.readObject ();
        view ().setDrawing (fDrawing);
    } catch (IOException e) {
        initDrawing ();
        showStatus ("Error: " + e);
    } catch (ClassNotFoundException e) {
        initDrawing ();
        showStatus ("Class not found: " + e);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="496" endline="504">
private String guessType (String file) {
    if (file.endsWith (".draw")) {
        return "storable";
    }
    if (file.endsWith (".ser")) {
        return "serialized";
    }
    return "unknown";
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="506" endline="532">
private void setupAttributes () {
    Color frameColor = (Color) AttributeFigure.getDefaultAttribute (FigureAttributeConstant.FRAME_COLOR);
    Color fillColor = (Color) AttributeFigure.getDefaultAttribute (FigureAttributeConstant.FILL_COLOR);
    Color textColor = (Color) AttributeFigure.getDefaultAttribute (FigureAttributeConstant.TEXT_COLOR);
    Integer arrowMode = (Integer) AttributeFigure.getDefaultAttribute (FigureAttributeConstant.ARROW_MODE);
    String fontName = (String) AttributeFigure.getDefaultAttribute (FigureAttributeConstant.FONT_NAME);
    FigureEnumeration fe = view ().selection ();
    while (fe.hasNextFigure ()) {
        Figure f = fe.nextFigure ();
        frameColor = (Color) f.getAttribute (FigureAttributeConstant.FRAME_COLOR);
        fillColor = (Color) f.getAttribute (FigureAttributeConstant.FILL_COLOR);
        textColor = (Color) f.getAttribute (FigureAttributeConstant.TEXT_COLOR);
        arrowMode = (Integer) f.getAttribute (FigureAttributeConstant.ARROW_MODE);
        fontName = (String) f.getAttribute (FigureAttributeConstant.FONT_NAME);
    }
    fFrameColor.setSelectedIndex (ColorMap.colorIndex (frameColor));
    fFillColor.setSelectedIndex (ColorMap.colorIndex (fillColor));
    if (arrowMode != null) {
        fArrowChoice.setSelectedIndex (arrowMode.intValue ());
    }
    if (fontName != null) {
        fFontChoice.setSelectedItem (fontName);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="534" endline="538">
protected void setSimpleDisplayUpdate () {
    view ().setDisplayUpdate (new SimpleUpdateStrategy ());
    fUpdateButton.setText ("Simple Update");
    fSimpleUpdate = true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="540" endline="544">
protected void setBufferedDisplayUpdate () {
    view ().setDisplayUpdate (new BufferedUpdateStrategy ());
    fUpdateButton.setText ("Buffered Update");
    fSimpleUpdate = false;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="550" endline="560">
protected void showHelp () {
    try {
        String appletPath = getClass ().getName ().replace ('.', '/');
        URL url = new URL (getCodeBase (), appletPath + "Help.html");
        getAppletContext ().showDocument (url, "Help");
    } catch (IOException e) {
        showStatus ("Help file not found");
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="562" endline="564">
protected void setUndoManager (UndoManager newUndoManager) {
    myUndoManager = newUndoManager;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="566" endline="568">
public UndoManager getUndoManager () {
    return myUndoManager;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="570" endline="572">
protected VersionControlStrategy getVersionControlStrategy () {
    return new StandardVersionControlStrategy (this);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="582" endline="587">
public String [] getRequiredVersions () {
    String [] requiredVersions = new String [1];
    requiredVersions [0] = VersionManagement.getPackageVersion (DrawApplet.class.getPackage ());
    return requiredVersions;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="592" endline="597">
private void startSleeper () {
    if (fSleeper == null) {
        fSleeper = new SleeperThread (this);
    }
    fSleeper.start ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="599" endline="603">
private void stopSleeper () {
    if (fSleeper != null) {
        fSleeper.stop ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="611" endline="613">
SleeperThread (JApplet applet) {
    fApplet = applet;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/applet/DrawApplet.java" startline="615" endline="625">
public void run () {
    try {
        for (;;) {
            fApplet.showStatus ("loading icons...");
            sleep (50);
        }
    } catch (InterruptedException e) {
        return;
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SingleFigureEnumerator.java" startline="28" endline="31">
public SingleFigureEnumerator (Figure newSingleFigure) {
    myInitialFigure = newSingleFigure;
    reset ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SingleFigureEnumerator.java" startline="37" endline="39">
public boolean hasNextFigure () {
    return mySingleFigure != null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SingleFigureEnumerator.java" startline="46" endline="50">
public Figure nextFigure () {
    Figure returnFigure = mySingleFigure;
    mySingleFigure = null;
    return returnFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SingleFigureEnumerator.java" startline="58" endline="60">
public void reset () {
    mySingleFigure = myInitialFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/OrderedFigureElement.java" startline="29" endline="32">
public OrderedFigureElement (Figure aFigure, int nZ) {
    _theFigure = aFigure;
    _nZ = nZ;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/OrderedFigureElement.java" startline="36" endline="38">
public Figure getFigure () {
    return _theFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/OrderedFigureElement.java" startline="40" endline="42">
public int getZValue () {
    return _nZ;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/OrderedFigureElement.java" startline="44" endline="55">
public int compareTo (Object o) {
    OrderedFigureElement ofe = (OrderedFigureElement) o;
    if (_nZ == ofe.getZValue ()) {
        return 0;
    }
    if (_nZ > ofe.getZValue ()) {
        return 1;
    }
    return - 1;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="44" endline="46">
public AbstractCommand (String newName, DrawingEditor newDrawingEditor) {
    this (newName, newDrawingEditor, true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="48" endline="54">
public AbstractCommand (String newName, DrawingEditor newDrawingEditor, boolean newIsViewRequired) {
    setName (newName);
    setDrawingEditor (newDrawingEditor);
    getDrawingEditor ().addViewChangeListener (this);
    myIsViewRequired = newIsViewRequired;
    setEventDispatcher (createEventDispatcher ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="56" endline="75">
public void viewSelectionChanged (DrawingView oldView, DrawingView newView) {
    if (oldView != null) {
        oldView.removeFigureSelectionListener (this);
    }
    if (newView != null) {
        newView.addFigureSelectionListener (this);
    }
    if (isViewRequired ()) {
        boolean isOldViewInteractive = (oldView != null) && oldView.isInteractive ();
        boolean isNewViewInteractive = (newView != null) && newView.isInteractive ();
        if (! isOldViewInteractive && isNewViewInteractive) {
            getEventDispatcher ().fireCommandExecutableEvent ();
        } else if (isOldViewInteractive && ! isNewViewInteractive) {
            getEventDispatcher ().fireCommandNotExecutableEvent ();
        }

    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="80" endline="81">
public void viewCreated (DrawingView view) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="86" endline="87">
public void viewDestroying (DrawingView view) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="92" endline="93">
public void figureSelectionChanged (DrawingView view) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="98" endline="100">
public DrawingEditor getDrawingEditor () {
    return myDrawingEditor;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="102" endline="104">
private void setDrawingEditor (DrawingEditor newDrawingEditor) {
    myDrawingEditor = newDrawingEditor;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="111" endline="113">
public DrawingView view () {
    return getDrawingEditor ().view ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="118" endline="120">
public String name () {
    return myName;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="122" endline="124">
public void setName (String newName) {
    myName = newName;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="129" endline="133">
public void dispose () {
    if (view () != null) {
        view ().removeFigureSelectionListener (this);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="138" endline="142">
public void execute () {
    if (view () == null) {
        throw new JHotDrawRuntimeException ("execute should NOT be getting called when view() == null");
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="150" endline="159">
public boolean isExecutable () {
    if (isViewRequired ()) {
        if ((view () == null) || ! view ().isInteractive ()) {
            return false;
        }
    }
    return isExecutableWithView ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="161" endline="163">
protected boolean isViewRequired () {
    return myIsViewRequired;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="165" endline="167">
protected boolean isExecutableWithView () {
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="169" endline="171">
public Undoable getUndoActivity () {
    return myUndoableActivity;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="173" endline="175">
public void setUndoActivity (Undoable newUndoableActivity) {
    myUndoableActivity = newUndoableActivity;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="177" endline="179">
public void addCommandListener (CommandListener newCommandListener) {
    getEventDispatcher ().addCommandListener (newCommandListener);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="181" endline="183">
public void removeCommandListener (CommandListener oldCommandListener) {
    getEventDispatcher ().removeCommandListener (oldCommandListener);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="185" endline="187">
private void setEventDispatcher (AbstractCommand.EventDispatcher newEventDispatcher) {
    myEventDispatcher = newEventDispatcher;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="189" endline="191">
protected AbstractCommand.EventDispatcher getEventDispatcher () {
    return myEventDispatcher;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="193" endline="195">
public AbstractCommand.EventDispatcher createEventDispatcher () {
    return new AbstractCommand.EventDispatcher (this);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="201" endline="204">
public EventDispatcher (Command newObservedCommand) {
    myRegisteredListeners = CollectionsFactory.current ().createList ();
    myObservedCommand = newObservedCommand;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="206" endline="211">
public void fireCommandExecutedEvent () {
    Iterator iter = myRegisteredListeners.iterator ();
    while (iter.hasNext ()) {
        ((CommandListener) iter.next ()).commandExecuted (new EventObject (myObservedCommand));
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="213" endline="218">
public void fireCommandExecutableEvent () {
    Iterator iter = myRegisteredListeners.iterator ();
    while (iter.hasNext ()) {
        ((CommandListener) iter.next ()).commandExecutable (new EventObject (myObservedCommand));
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="220" endline="225">
public void fireCommandNotExecutableEvent () {
    Iterator iter = myRegisteredListeners.iterator ();
    while (iter.hasNext ()) {
        ((CommandListener) iter.next ()).commandNotExecutable (new EventObject (myObservedCommand));
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="227" endline="231">
public void addCommandListener (CommandListener newCommandListener) {
    if (! myRegisteredListeners.contains (newCommandListener)) {
        myRegisteredListeners.add (newCommandListener);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractCommand.java" startline="233" endline="237">
public void removeCommandListener (CommandListener oldCommandListener) {
    if (myRegisteredListeners.contains (oldCommandListener)) {
        myRegisteredListeners.remove (oldCommandListener);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SendToBackCommand.java" startline="31" endline="33">
public SendToBackCommand (String name, DrawingEditor newDrawingEditor) {
    super (name, newDrawingEditor);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SendToBackCommand.java" startline="35" endline="44">
public void execute () {
    super.execute ();
    setUndoActivity (createUndoActivity ());
    getUndoActivity ().setAffectedFigures (view ().selectionZOrdered ());
    FigureEnumeration fe = getUndoActivity ().getAffectedFigures ();
    while (fe.hasNextFigure ()) {
        view ().drawing ().sendToBack (fe.nextFigure ());
    }
    view ().checkDamage ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SendToBackCommand.java" startline="46" endline="48">
protected boolean isExecutableWithView () {
    return view ().selectionCount () > 0;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SendToBackCommand.java" startline="50" endline="52">
protected Undoable createUndoActivity () {
    return new SendToBackCommand.UndoActivity (view ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SendToBackCommand.java" startline="57" endline="62">
public UndoActivity (DrawingView newDrawingView) {
    super (newDrawingView);
    myOriginalLayers = new Hashtable ();
    setUndoable (true);
    setRedoable (true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SendToBackCommand.java" startline="64" endline="77">
public boolean undo () {
    if (! super.undo ()) {
        return false;
    }
    FigureEnumeration fe = getAffectedFigures ();
    while (fe.hasNextFigure ()) {
        Figure currentFigure = fe.nextFigure ();
        int currentFigureLayer = getOriginalLayer (currentFigure);
        getDrawingView ().drawing ().sendToLayer (currentFigure, currentFigureLayer);
    }
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SendToBackCommand.java" startline="79" endline="91">
public boolean redo () {
    if (! isRedoable ()) {
        return false;
    }
    FigureEnumeration fe = getAffectedFigures ();
    while (fe.hasNextFigure ()) {
        sendToCommand (fe.nextFigure ());
    }
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SendToBackCommand.java" startline="93" endline="95">
protected void sendToCommand (Figure f) {
    getDrawingView ().drawing ().sendToBack (f);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SendToBackCommand.java" startline="97" endline="99">
protected void addOriginalLayer (Figure affectedFigure, int newOriginalLayer) {
    myOriginalLayers.put (affectedFigure, new Integer (newOriginalLayer));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SendToBackCommand.java" startline="101" endline="103">
protected int getOriginalLayer (Figure lookupAffectedFigure) {
    return ((Integer) myOriginalLayers.get (lookupAffectedFigure)).intValue ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SendToBackCommand.java" startline="105" endline="115">
public void setAffectedFigures (FigureEnumeration fe) {
    super.setAffectedFigures (fe);
    FigureEnumeration copyFe = getAffectedFigures ();
    while (copyFe.hasNextFigure ()) {
        Figure f = copyFe.nextFigure ();
        int originalLayer = getDrawingView ().drawing ().getLayer (f);
        addOriginalLayer (f, originalLayer);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="34" endline="37">
public DragTracker (DrawingEditor newDrawingEditor, Figure anchor) {
    super (newDrawingEditor);
    fAnchorFigure = anchor;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="39" endline="55">
public void mouseDown (MouseEvent e, int x, int y) {
    super.mouseDown (e, x, y);
    fLastX = x;
    fLastY = y;
    if (e.isShiftDown ()) {
        getActiveView ().toggleSelection (fAnchorFigure);
        fAnchorFigure = null;
    } else if (! getActiveView ().isFigureSelected (fAnchorFigure)) {
        getActiveView ().clearSelection ();
        getActiveView ().addToSelection (fAnchorFigure);
    }

    setUndoActivity (createUndoActivity ());
    getUndoActivity ().setAffectedFigures (getActiveView ().selection ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="57" endline="69">
public void mouseDrag (MouseEvent e, int x, int y) {
    super.mouseDrag (e, x, y);
    fMoved = (Math.abs (x - getAnchorX ()) > 4) || (Math.abs (y - getAnchorY ()) > 4);
    if (fMoved) {
        FigureEnumeration figures = getUndoActivity ().getAffectedFigures ();
        while (figures.hasNextFigure ()) {
            figures.nextFigure ().moveBy (x - fLastX, y - fLastY);
        }
    }
    fLastX = x;
    fLastY = y;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="71" endline="74">
public void activate () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="76" endline="83">
public void deactivate () {
    if (fMoved) {
        ((DragTracker.UndoActivity) getUndoActivity ()).setBackupPoint (new Point (fLastX, fLastY));
    } else {
        setUndoActivity (null);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="88" endline="90">
protected Undoable createUndoActivity () {
    return new DragTracker.UndoActivity (getActiveView (), new Point (fLastX, fLastY));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="96" endline="101">
public UndoActivity (DrawingView newDrawingView, Point newOriginalPoint) {
    super (newDrawingView);
    setOriginalPoint (newOriginalPoint);
    setUndoable (true);
    setRedoable (true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="107" endline="113">
public boolean undo () {
    if (! super.undo ()) {
        return false;
    }
    moveAffectedFigures (getBackupPoint (), getOriginalPoint ());
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="119" endline="125">
public boolean redo () {
    if (! super.redo ()) {
        return false;
    }
    moveAffectedFigures (getOriginalPoint (), getBackupPoint ());
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="127" endline="129">
public void setBackupPoint (Point newBackupPoint) {
    myBackupPoint = newBackupPoint;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="131" endline="133">
public Point getBackupPoint () {
    return myBackupPoint;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="135" endline="137">
public void setOriginalPoint (Point newOriginalPoint) {
    myOriginalPoint = newOriginalPoint;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="139" endline="141">
public Point getOriginalPoint () {
    return myOriginalPoint;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DragTracker.java" startline="143" endline="149">
public void moveAffectedFigures (Point startPoint, Point endPoint) {
    FigureEnumeration figures = getAffectedFigures ();
    while (figures.hasNextFigure ()) {
        figures.nextFigure ().moveBy (endPoint.x - startPoint.x, endPoint.y - startPoint.y);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractLocator.java" startline="36" endline="37">
protected AbstractLocator () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractLocator.java" startline="39" endline="46">
public Object clone () {
    try {
        return super.clone ();
    } catch (CloneNotSupportedException e) {
        throw new InternalError ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractLocator.java" startline="51" endline="52">
public void write (StorableOutput dw) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractLocator.java" startline="57" endline="58">
public void read (StorableInput dr) throws IOException {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FastBufferedUpdateStrategy.java" startline="39" endline="40">
public FastBufferedUpdateStrategy () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FastBufferedUpdateStrategy.java" startline="44" endline="88">
public void draw (Graphics g, DrawingView view) {
    _checkCaches (view);
    if (_bRedrawAll == true) {
        Graphics imageGraphics = _doubleBufferedImage.getGraphics ();
        view.drawAll (imageGraphics);
    } else {
        Rectangle viewClipRectangle = g.getClipBounds ();
        int nX1 = viewClipRectangle.x;
        int nY1 = viewClipRectangle.y;
        int nX2 = viewClipRectangle.x + viewClipRectangle.width;
        int nY2 = viewClipRectangle.y + viewClipRectangle.height;
        if (nX1 < 0) {
            nX1 = 0;
        }
        if (nY1 < 0) {
            nY1 = 0;
        }
        if (nX2 < 0) {
            nX2 = 0;
        }
        if (nY2 < 0) {
            nY2 = 0;
        }
        Rectangle viewClipRectangle2 = new Rectangle (nX1, nY1, nX2 - nX1, nY2 - nY1);
        Drawing theDrawing = view.drawing ();
        FigureEnumeration fe = theDrawing.figures (viewClipRectangle2);
        Graphics imageGraphics = _scratchPadBufferedImage.getGraphics ();
        imageGraphics.setColor (view.getBackground ());
        imageGraphics.fillRect (nX1, nY1, nX2 - nX1, nY2 - nY1);
        view.draw (imageGraphics, fe);
        Graphics dbGraphics = _doubleBufferedImage.getGraphics ();
        dbGraphics.drawImage (_scratchPadBufferedImage, nX1, nY1, nX2, nY2, nX1, nY1, nX2, nY2, view);
    }
    g.drawImage (_doubleBufferedImage, 0, 0, view);
    _bRedrawAll = false;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FastBufferedUpdateStrategy.java" startline="94" endline="117">
private void _checkCaches (DrawingView view) {
    Dimension d = view.getSize ();
    if ((_doubleBufferedImage == null) || (_nImageWidth != d.width) || (_nImageHeight != d.height)) {
        _doubleBufferedImage = new BufferedImage (d.width, d.height, BufferedImage.TYPE_INT_RGB);
        _bRedrawAll = true;
    }
    if ((_scratchPadBufferedImage == null) || (_nImageWidth != d.width) || (_nImageHeight != d.height)) {
        _scratchPadBufferedImage = new BufferedImage (d.width, d.height, BufferedImage.TYPE_INT_RGB);
        Graphics imageGraphics = _scratchPadBufferedImage.getGraphics ();
        view.drawBackground (imageGraphics);
        _bRedrawAll = true;
    }
    _nImageWidth = d.width;
    _nImageHeight = d.height;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleEnumerator.java" startline="33" endline="36">
public HandleEnumerator (Collection c) {
    myInitialCollection = c;
    reset ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleEnumerator.java" startline="42" endline="44">
public boolean hasNextHandle () {
    return myIterator.hasNext ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleEnumerator.java" startline="51" endline="53">
public Handle nextHandle () {
    return (Handle) myIterator.next ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleEnumerator.java" startline="64" endline="72">
public List toList () {
    List handles = CollectionsFactory.current ().createList ();
    while (hasNextHandle ()) {
        handles.add (nextHandle ());
    }
    myIterator = handles.iterator ();
    return handles;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleEnumerator.java" startline="80" endline="82">
public void reset () {
    myIterator = myInitialCollection.iterator ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleEnumerator.java" startline="84" endline="86">
public static HandleEnumeration getEmptyEnumeration () {
    return singletonEmptyEnumerator;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SimpleUpdateStrategy.java" startline="37" endline="39">
public void draw (Graphics g, DrawingView view) {
    view.drawAll (g);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/PasteCommand.java" startline="32" endline="34">
public PasteCommand (String name, DrawingEditor newDrawingEditor) {
    super (name, newDrawingEditor);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/PasteCommand.java" startline="36" endline="59">
public void execute () {
    super.execute ();
    Point lastClick = view ().lastClick ();
    FigureSelection selection = (FigureSelection) Clipboard.getClipboard ().getContents ();
    if (selection != null) {
        setUndoActivity (createUndoActivity ());
        getUndoActivity ().setAffectedFigures ((FigureEnumerator) selection.getData (StandardFigureSelection.TYPE));
        if (! getUndoActivity ().getAffectedFigures ().hasNextFigure ()) {
            setUndoActivity (null);
            return;
        }
        Rectangle r = getBounds (getUndoActivity ().getAffectedFigures ());
        view ().clearSelection ();
        FigureEnumeration fe = insertFigures (getUndoActivity ().getAffectedFigures (), lastClick.x - r.x, lastClick.y - r.y);
        getUndoActivity ().setAffectedFigures (fe);
        view ().checkDamage ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/PasteCommand.java" startline="61" endline="63">
public boolean isExecutableWithView () {
    return Clipboard.getClipboard ().getContents () != null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/PasteCommand.java" startline="65" endline="71">
private Rectangle getBounds (FigureEnumeration fe) {
    Rectangle r = fe.nextFigure ().displayBox ();
    while (fe.hasNextFigure ()) {
        r.add (fe.nextFigure ().displayBox ());
    }
    return r;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/PasteCommand.java" startline="76" endline="78">
protected Undoable createUndoActivity () {
    return new PasteCommand.UndoActivity (view ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/PasteCommand.java" startline="82" endline="86">
public UndoActivity (DrawingView newDrawingView) {
    super (newDrawingView);
    setUndoable (true);
    setRedoable (true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/PasteCommand.java" startline="88" endline="102">
public boolean undo () {
    if (! super.undo ()) {
        return false;
    }
    DeleteFromDrawingVisitor deleteVisitor = new DeleteFromDrawingVisitor (getDrawingView ().drawing ());
    FigureEnumeration fe = getAffectedFigures ();
    while (fe.hasNextFigure ()) {
        fe.nextFigure ().visit (deleteVisitor);
    }
    getDrawingView ().clearSelection ();
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/PasteCommand.java" startline="104" endline="115">
public boolean redo () {
    if (! isRedoable ()) {
        return false;
    }
    getDrawingView ().clearSelection ();
    setAffectedFigures (getDrawingView ().insertFigures (getAffectedFigures (), 0, 0, false));
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ActionTool.java" startline="26" endline="28">
public ActionTool (DrawingEditor newDrawingEditor) {
    super (newDrawingEditor);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ActionTool.java" startline="34" endline="41">
public void mouseDown (MouseEvent e, int x, int y) {
    super.mouseDown (e, x, y);
    Figure target = drawing ().findFigure (x, y);
    if (target != null) {
        view ().addToSelection (target);
        action (target);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ActionTool.java" startline="43" endline="45">
public void mouseUp (MouseEvent e, int x, int y) {
    editor ().toolDone ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="61" endline="63">
protected AbstractFigure () {
    myDependendFigures = CollectionsFactory.current ().createList ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="68" endline="72">
public void moveBy (int dx, int dy) {
    willChange ();
    basicMoveBy (dx, dy);
    changed ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="90" endline="94">
public void displayBox (Point origin, Point corner) {
    willChange ();
    basicDisplayBox (origin, corner);
    changed ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="121" endline="123">
public FigureEnumeration figures () {
    return FigureEnumerator.getEmptyEnumeration ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="128" endline="130">
public Dimension size () {
    return new Dimension (displayBox ().width, displayBox ().height);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="137" endline="139">
public boolean isEmpty () {
    return (size ().width < 3) || (size ().height < 3);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="148" endline="153">
public Figure findFigureInside (int x, int y) {
    if (containsPoint (x, y)) {
        return this;
    }
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="158" endline="160">
public boolean containsPoint (int x, int y) {
    return displayBox ().contains (x, y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="168" endline="170">
public void displayBox (Rectangle r) {
    displayBox (new Point (r.x, r.y), new Point (r.x + r.width, r.y + r.height));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="175" endline="177">
public boolean includes (Figure figure) {
    return figure == this;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="184" endline="188">
public FigureEnumeration decompose () {
    List figures = CollectionsFactory.current ().createList (1);
    figures.add (this);
    return new FigureEnumerator (figures);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="196" endline="199">
public void addToContainer (FigureChangeListener c) {
    addFigureChangeListener (c);
    invalidate ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="205" endline="208">
public void removeFromContainer (FigureChangeListener c) {
    invalidate ();
    removeFigureChangeListener (c);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="213" endline="215">
public synchronized void addFigureChangeListener (FigureChangeListener l) {
    fListener = FigureChangeEventMulticaster.add (listener (), l);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="220" endline="222">
public synchronized void removeFigureChangeListener (FigureChangeListener l) {
    fListener = FigureChangeEventMulticaster.remove (listener (), l);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="227" endline="229">
public synchronized FigureChangeListener listener () {
    return fListener;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="236" endline="240">
public void release () {
    if (listener () != null) {
        listener ().figureRemoved (new FigureChangeEvent (this));
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="247" endline="252">
public void invalidate () {
    if (listener () != null) {
        Rectangle r = invalidateRectangle (displayBox ());
        listener ().figureInvalidated (new FigureChangeEvent (this, r));
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="257" endline="260">
protected Rectangle invalidateRectangle (Rectangle r) {
    r.grow (Handle.HANDLESIZE, Handle.HANDLESIZE);
    return r;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="268" endline="271">
public void willChange () {
    invalidate ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="279" endline="284">
public void changed () {
    invalidate ();
    if (listener () != null) {
        listener ().figureChanged (new FigureChangeEvent (this));
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="290" endline="292">
public Point center () {
    return Geom.center (displayBox ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="298" endline="300">
public boolean canConnect () {
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="309" endline="311">
public Insets connectionInsets () {
    return new Insets (0, 0, 0, 0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="318" endline="320">
public Connector connectorAt (int x, int y) {
    return new ChopBoxConnector (this);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="326" endline="327">
public void connectorVisibility (boolean isVisible, ConnectionFigure connector) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="332" endline="334">
public Locator connectedTextLocator (Figure text) {
    return RelativeLocator.center ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="344" endline="346">
public Object getAttribute (String name) {
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="354" endline="356">
public Object getAttribute (FigureAttributeConstant attributeConstant) {
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="364" endline="365">
public void setAttribute (String name, Object value) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="371" endline="372">
public void setAttribute (FigureAttributeConstant attributeConstant, Object value) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="381" endline="405">
public Object clone () {
    Object clone = null;
    ByteArrayOutputStream output = new ByteArrayOutputStream (200);
    try {
        ObjectOutput writer = new ObjectOutputStream (output);
        writer.writeObject (this);
        writer.close ();
    } catch (IOException e) {
        System.err.println ("Class not found: " + e);
    }
    InputStream input = new ByteArrayInputStream (output.toByteArray ());
    try {
        ObjectInput reader = new ObjectInputStream (input);
        clone = reader.readObject ();
    } catch (IOException e) {
        System.err.println (e.toString ());
    } catch (ClassNotFoundException e) {
        System.err.println ("Class not found: " + e);
    }
    return clone;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="410" endline="411">
public void write (StorableOutput dw) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="416" endline="417">
public void read (StorableInput dr) throws IOException {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="422" endline="424">
public int getZValue () {
    return _nZ;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="429" endline="431">
public void setZValue (int z) {
    _nZ = z;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="433" endline="461">
public void visit (FigureVisitor visitor) {
    FigureChangeListener originalListener = listener ();
    FigureEnumeration fe = getDependendFigures ();
    visitor.visitFigure (this);
    FigureEnumeration visitFigures = figures ();
    while (visitFigures.hasNextFigure ()) {
        visitFigures.nextFigure ().visit (visitor);
    }
    HandleEnumeration visitHandles = handles ();
    while (visitHandles.hasNextHandle ()) {
        visitor.visitHandle (visitHandles.nextHandle ());
    }
    while (fe.hasNextFigure ()) {
        fe.nextFigure ().visit (visitor);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="463" endline="465">
public synchronized FigureEnumeration getDependendFigures () {
    return new FigureEnumerator (myDependendFigures);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="467" endline="469">
public synchronized void addDependendFigure (Figure newDependendFigure) {
    myDependendFigures.add (newDependendFigure);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="471" endline="473">
public synchronized void removeDependendFigure (Figure oldDependendFigure) {
    myDependendFigures.remove (oldDependendFigure);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="475" endline="477">
public TextHolder getTextHolder () {
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractFigure.java" startline="479" endline="481">
public Figure getDecoratedFigure () {
    return this;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChopBoxConnector.java" startline="34" endline="35">
public ChopBoxConnector () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChopBoxConnector.java" startline="37" endline="39">
public ChopBoxConnector (Figure owner) {
    super (owner);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChopBoxConnector.java" startline="41" endline="54">
public Point findStart (ConnectionFigure connection) {
    Figure startFigure = connection.getStartConnector ().owner ();
    Rectangle r2 = connection.getEndConnector ().displayBox ();
    Point r2c = null;
    if (connection.pointCount () == 2) {
        r2c = new Point (r2.x + r2.width / 2, r2.y + r2.height / 2);
    } else {
        r2c = connection.pointAt (1);
    }
    return chop (startFigure, r2c);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChopBoxConnector.java" startline="56" endline="69">
public Point findEnd (ConnectionFigure connection) {
    Figure endFigure = connection.getEndConnector ().owner ();
    Rectangle r1 = connection.getStartConnector ().displayBox ();
    Point r1c = null;
    if (connection.pointCount () == 2) {
        r1c = new Point (r1.x + r1.width / 2, r1.y + r1.height / 2);
    } else {
        r1c = connection.pointAt (connection.pointCount () - 2);
    }
    return chop (endFigure, r1c);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChopBoxConnector.java" startline="71" endline="74">
protected Point chop (Figure target, Point from) {
    Rectangle r = target.displayBox ();
    return Geom.angleToPoint (r, (Geom.pointToAngle (r, from)));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="37" endline="42">
static public void addCornerHandles (Figure f, List handles) {
    handles.add (southEast (f));
    handles.add (southWest (f));
    handles.add (northEast (f));
    handles.add (northWest (f));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="48" endline="54">
static public void addHandles (Figure f, List handles) {
    addCornerHandles (f, handles);
    handles.add (south (f));
    handles.add (north (f));
    handles.add (east (f));
    handles.add (west (f));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="56" endline="58">
static public Handle south (Figure owner) {
    return new SouthHandle (owner);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="60" endline="62">
static public Handle southEast (Figure owner) {
    return new SouthEastHandle (owner);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="64" endline="66">
static public Handle southWest (Figure owner) {
    return new SouthWestHandle (owner);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="68" endline="70">
static public Handle north (Figure owner) {
    return new NorthHandle (owner);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="72" endline="74">
static public Handle northEast (Figure owner) {
    return new NorthEastHandle (owner);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="76" endline="78">
static public Handle northWest (Figure owner) {
    return new NorthWestHandle (owner);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="80" endline="82">
static public Handle east (Figure owner) {
    return new EastHandle (owner);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="84" endline="86">
static public Handle west (Figure owner) {
    return new WestHandle (owner);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="90" endline="92">
ResizeHandle (Figure owner, Locator loc) {
    super (owner, loc);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="94" endline="98">
public void invokeStart (int x, int y, DrawingView view) {
    setUndoActivity (createUndoActivity (view));
    getUndoActivity ().setAffectedFigures (new SingleFigureEnumerator (owner ()));
    ((ResizeHandle.UndoActivity) getUndoActivity ()).setOldDisplayBox (owner ().displayBox ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="100" endline="106">
public void invokeEnd (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Rectangle oldDisplayBox = ((ResizeHandle.UndoActivity) getUndoActivity ()).getOldDisplayBox ();
    if (owner ().displayBox ().equals (oldDisplayBox)) {
        setUndoActivity (null);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="111" endline="113">
protected Undoable createUndoActivity (DrawingView view) {
    return new ResizeHandle.UndoActivity (view);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="118" endline="122">
public UndoActivity (DrawingView newView) {
    super (newView);
    setUndoable (true);
    setRedoable (true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="124" endline="130">
public boolean undo () {
    if (! super.undo ()) {
        return false;
    }
    return resetDisplayBox ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="132" endline="139">
public boolean redo () {
    if (! isRedoable ()) {
        return false;
    }
    return resetDisplayBox ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="141" endline="152">
private boolean resetDisplayBox () {
    FigureEnumeration fe = getAffectedFigures ();
    if (! fe.hasNextFigure ()) {
        return false;
    }
    Figure currentFigure = fe.nextFigure ();
    Rectangle figureDisplayBox = currentFigure.displayBox ();
    currentFigure.displayBox (getOldDisplayBox ());
    setOldDisplayBox (figureDisplayBox);
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="154" endline="156">
protected void setOldDisplayBox (Rectangle newOldDisplayBox) {
    myOldDisplayBox = newOldDisplayBox;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="158" endline="160">
public Rectangle getOldDisplayBox () {
    return myOldDisplayBox;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="165" endline="167">
NorthEastHandle (Figure owner) {
    super (owner, RelativeLocator.northEast ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="169" endline="175">
public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Rectangle r = owner ().displayBox ();
    owner ().displayBox (new Point (r.x, Math.min (r.y + r.height, y)), new Point (Math.max (r.x, x), r.y + r.height));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="179" endline="181">
EastHandle (Figure owner) {
    super (owner, RelativeLocator.east ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="183" endline="188">
public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Rectangle r = owner ().displayBox ();
    owner ().displayBox (new Point (r.x, r.y), new Point (Math.max (r.x, x), r.y + r.height));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="192" endline="194">
NorthHandle (Figure owner) {
    super (owner, RelativeLocator.north ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="196" endline="202">
public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Rectangle r = owner ().displayBox ();
    owner ().displayBox (new Point (r.x, Math.min (r.y + r.height, y)), new Point (r.x + r.width, r.y + r.height));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="206" endline="208">
NorthWestHandle (Figure owner) {
    super (owner, RelativeLocator.northWest ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="210" endline="216">
public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Rectangle r = owner ().displayBox ();
    owner ().displayBox (new Point (Math.min (r.x + r.width, x), Math.min (r.y + r.height, y)), new Point (r.x + r.width, r.y + r.height));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="220" endline="222">
SouthEastHandle (Figure owner) {
    super (owner, RelativeLocator.southEast ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="224" endline="230">
public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Rectangle r = owner ().displayBox ();
    owner ().displayBox (new Point (r.x, r.y), new Point (Math.max (r.x, x), Math.max (r.y, y)));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="234" endline="236">
SouthHandle (Figure owner) {
    super (owner, RelativeLocator.south ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="238" endline="244">
public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Rectangle r = owner ().displayBox ();
    owner ().displayBox (new Point (r.x, r.y), new Point (r.x + r.width, Math.max (r.y, y)));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="248" endline="250">
SouthWestHandle (Figure owner) {
    super (owner, RelativeLocator.southWest ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="252" endline="258">
public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Rectangle r = owner ().displayBox ();
    owner ().displayBox (new Point (Math.min (r.x + r.width, x), r.y), new Point (r.x + r.width, Math.max (r.y, y)));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="262" endline="264">
WestHandle (Figure owner) {
    super (owner, RelativeLocator.west ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BoxHandleKit.java" startline="266" endline="272">
public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Rectangle r = owner ().displayBox ();
    owner ().displayBox (new Point (Math.min (r.x + r.width, x), r.y), new Point (r.x + r.width, r.y + r.height));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectionTool.java" startline="41" endline="43">
public SelectionTool (DrawingEditor newDrawingEditor) {
    super (newDrawingEditor);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectionTool.java" startline="48" endline="77">
public void mouseDown (MouseEvent e, int x, int y) {
    super.mouseDown (e, x, y);
    if (getDelegateTool () != null) {
        return;
    }
    view ().freezeView ();
    Handle handle = view ().findHandle (e.getX (), e.getY ());
    if (handle != null) {
        setDelegateTool (createHandleTracker (view (), handle));
    } else {
        Figure figure = drawing ().findFigure (e.getX (), e.getY ());
        if (figure != null) {
            setDelegateTool (createDragTracker (figure));
        } else {
            if (! e.isShiftDown ()) {
                view ().clearSelection ();
            }
            setDelegateTool (createAreaTracker ());
        }
    }
    getDelegateTool ().activate ();
    getDelegateTool ().mouseDown (e, x, y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectionTool.java" startline="83" endline="87">
public void mouseMove (MouseEvent evt, int x, int y) {
    if (evt.getSource () == getActiveView ()) {
        DragNDropTool.setCursor (evt.getX (), evt.getY (), getActiveView ());
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectionTool.java" startline="93" endline="97">
public void mouseDrag (MouseEvent e, int x, int y) {
    if (getDelegateTool () != null) {
        getDelegateTool ().mouseDrag (e, x, y);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectionTool.java" startline="103" endline="112">
public void mouseUp (MouseEvent e, int x, int y) {
    if (getDelegateTool () != null) {
        getDelegateTool ().mouseUp (e, x, y);
        getDelegateTool ().deactivate ();
        setDelegateTool (null);
    }
    if (view () != null) {
        view ().unfreezeView ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectionTool.java" startline="117" endline="119">
protected Tool createHandleTracker (DrawingView view, Handle handle) {
    return new HandleTracker (editor (), new UndoableHandle (handle, view));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectionTool.java" startline="124" endline="126">
protected Tool createDragTracker (Figure f) {
    return new UndoableTool (new DragTracker (editor (), f));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectionTool.java" startline="132" endline="134">
protected Tool createAreaTracker () {
    return new SelectAreaTracker (editor ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectionTool.java" startline="136" endline="138">
protected Tool getDelegateTool () {
    return fChild;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectionTool.java" startline="140" endline="142">
private void setDelegateTool (Tool newDelegateTool) {
    fChild = newDelegateTool;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="38" endline="41">
protected NullDrawingView (DrawingEditor editor) {
    setEditor (editor);
    setDrawing (new StandardDrawing ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="46" endline="48">
public void setEditor (DrawingEditor editor) {
    myDrawingEditor = editor;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="53" endline="55">
public Tool tool () {
    return editor ().tool ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="60" endline="62">
public Drawing drawing () {
    return myDrawing;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="67" endline="69">
public void setDrawing (Drawing d) {
    myDrawing = d;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="74" endline="76">
public DrawingEditor editor () {
    return myDrawingEditor;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="82" endline="84">
public Figure add (Figure figure) {
    return figure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="90" endline="92">
public Figure remove (Figure figure) {
    return figure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="97" endline="99">
public void addAll (Collection figures) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="104" endline="106">
public Dimension getSize () {
    return new Dimension ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="111" endline="113">
public Dimension getMinimumSize () {
    return new Dimension ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="118" endline="120">
public Dimension getPreferredSize () {
    return new Dimension ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="126" endline="128">
public void setDisplayUpdate (Painter newUpdateStrategy) {
    myUpdateStrategy = newUpdateStrategy;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="134" endline="136">
public Painter getDisplayUpdate () {
    return myUpdateStrategy;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="145" endline="147">
public FigureEnumeration selection () {
    return FigureEnumerator.getEmptyEnumeration ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="155" endline="157">
public FigureEnumeration selectionZOrdered () {
    return FigureEnumerator.getEmptyEnumeration ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="162" endline="164">
public int selectionCount () {
    return 0;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="169" endline="171">
public boolean isFigureSelected (Figure checkFigure) {
    return false;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="176" endline="178">
public void addToSelection (Figure figure) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="183" endline="185">
public void addToSelectionAll (Collection figures) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="190" endline="192">
public void addToSelectionAll (FigureEnumeration fe) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="197" endline="199">
public void removeFromSelection (Figure figure) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="205" endline="207">
public void toggleSelection (Figure figure) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="212" endline="214">
public void clearSelection () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="220" endline="222">
public FigureSelection getFigureSelection () {
    return new StandardFigureSelection (selection (), 0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="228" endline="230">
public Handle findHandle (int x, int y) {
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="235" endline="237">
public Point lastClick () {
    return new Point ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="242" endline="244">
public void setConstrainer (PointConstrainer p) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="249" endline="251">
public PointConstrainer getConstrainer () {
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="256" endline="258">
public void checkDamage () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="263" endline="265">
public void repairDamage () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="272" endline="274">
public void paint (Graphics g) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="279" endline="281">
public Image createImage (int width, int height) {
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="286" endline="288">
public Graphics getGraphics () {
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="293" endline="295">
public Color getBackground () {
    return myBackgroundColor;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="300" endline="302">
public void setBackground (Color c) {
    myBackgroundColor = c;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="309" endline="311">
public void drawAll (Graphics g) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="318" endline="320">
public void draw (Graphics g, FigureEnumeration fe) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="325" endline="327">
public void drawHandles (Graphics g) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="332" endline="334">
public void drawDrawing (Graphics g) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="341" endline="343">
public void drawBackground (Graphics g) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="348" endline="350">
public void setCursor (Cursor c) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="356" endline="358">
public void freezeView () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="364" endline="366">
public void unfreezeView () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="372" endline="374">
public void addFigureSelectionListener (FigureSelectionListener fsl) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="380" endline="382">
public void removeFigureSelectionListener (FigureSelectionListener fsl) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="387" endline="389">
public FigureEnumeration getConnectionFigures (Figure inFigure) {
    return FigureEnumerator.getEmptyEnumeration ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="397" endline="399">
public FigureEnumeration insertFigures (FigureEnumeration inFigures, int dx, int dy, boolean bCheck) {
    return FigureEnumerator.getEmptyEnumeration ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="401" endline="403">
public void drawingInvalidated (DrawingChangeEvent e) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="405" endline="407">
public void drawingRequestUpdate (DrawingChangeEvent e) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="409" endline="411">
public void drawingTitleChanged (DrawingChangeEvent e) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="413" endline="415">
public boolean isInteractive () {
    return false;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullDrawingView.java" startline="417" endline="426">
public synchronized static DrawingView getManagedDrawingView (DrawingEditor editor) {
    if (drawingViewManager.containsKey (editor)) {
        return (DrawingView) drawingViewManager.get (editor);
    } else {
        DrawingView newDrawingView = new NullDrawingView (editor);
        drawingViewManager.put (editor, newDrawingView);
        return newDrawingView;
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectAllCommand.java" startline="30" endline="32">
public SelectAllCommand (String name, DrawingEditor newDrawingEditor) {
    super (name, newDrawingEditor);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectAllCommand.java" startline="34" endline="40">
public void execute () {
    super.execute ();
    setUndoActivity (createUndoActivity ());
    getUndoActivity ().setAffectedFigures (view ().selection ());
    view ().addToSelectionAll (view ().drawing ().figures ());
    view ().checkDamage ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectAllCommand.java" startline="47" endline="54">
public boolean isExecutableWithView () {
    FigureEnumeration fe = view ().drawing ().figures ();
    if (fe.hasNextFigure () && (fe.nextFigure () != null)) {
        return true;
    }
    return false;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectAllCommand.java" startline="59" endline="61">
protected Undoable createUndoActivity () {
    return new SelectAllCommand.UndoActivity (view ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectAllCommand.java" startline="64" endline="68">
public UndoActivity (DrawingView newDrawingView) {
    super (newDrawingView);
    setUndoable (true);
    setRedoable (true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectAllCommand.java" startline="70" endline="79">
public boolean undo () {
    if (! super.undo ()) {
        return false;
    }
    getDrawingView ().clearSelection ();
    getDrawingView ().addToSelectionAll (getAffectedFigures ());
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/SelectAllCommand.java" startline="81" endline="89">
public boolean redo () {
    if (isRedoable ()) {
        getDrawingView ().addToSelectionAll (getDrawingView ().drawing ().figures ());
        return true;
    }
    return false;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureAndEnumerator.java" startline="25" endline="28">
public FigureAndEnumerator (FigureEnumeration newFE1, FigureEnumeration newFE2) {
    myFE1 = newFE1;
    myFE2 = newFE2;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureAndEnumerator.java" startline="30" endline="41">
public Figure nextFigure () {
    if (myFE1.hasNextFigure ()) {
        return myFE1.nextFigure ();
    } else if (myFE2.hasNextFigure ()) {
        return myFE2.nextFigure ();
    } else {
        return null;
    }

}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureAndEnumerator.java" startline="43" endline="45">
public boolean hasNextFigure () {
    return myFE1.hasNextFigure () || myFE2.hasNextFigure ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureAndEnumerator.java" startline="53" endline="56">
public void reset () {
    myFE1.reset ();
    myFE2.reset ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardFigureSelection.java" startline="42" endline="53">
public StandardFigureSelection (FigureEnumeration fe, int figureCount) {
    ByteArrayOutputStream output = new ByteArrayOutputStream (200);
    StorableOutput writer = new StorableOutput (output);
    writer.writeInt (figureCount);
    while (fe.hasNextFigure ()) {
        writer.writeStorable (fe.nextFigure ());
    }
    writer.close ();
    fData = output.toByteArray ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardFigureSelection.java" startline="58" endline="60">
public String getType () {
    return TYPE;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardFigureSelection.java" startline="68" endline="88">
public Object getData (String type) {
    if (type.equals (TYPE)) {
        InputStream input = new ByteArrayInputStream (fData);
        List result = CollectionsFactory.current ().createList (10);
        StorableInput reader = new StorableInput (input);
        int numRead = 0;
        try {
            int count = reader.readInt ();
            while (numRead < count) {
                Figure newFigure = (Figure) reader.readStorable ();
                result.add (newFigure);
                numRead ++;
            }
        } catch (IOException e) {
            System.err.println (e.toString ());
        }
        return new FigureEnumerator (result);
    }
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardFigureSelection.java" startline="90" endline="93">
public static FigureEnumeration duplicateFigures (FigureEnumeration toBeCloned, int figureCount) {
    StandardFigureSelection duplicater = new StandardFigureSelection (toBeCloned, figureCount);
    return (FigureEnumeration) duplicater.getData (duplicater.getType ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ReverseFigureEnumerator.java" startline="29" endline="32">
public ReverseFigureEnumerator (List l) {
    myInitialList = l;
    reset ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ReverseFigureEnumerator.java" startline="38" endline="40">
public boolean hasNextFigure () {
    return myIterator.hasNext ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ReverseFigureEnumerator.java" startline="47" endline="49">
public Figure nextFigure () {
    return (Figure) myIterator.next ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ReverseFigureEnumerator.java" startline="57" endline="59">
public void reset () {
    myIterator = new ReverseListEnumerator (myInitialList);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleTracker.java" startline="28" endline="31">
public HandleTracker (DrawingEditor newDrawingEditor, Handle anchorHandle) {
    super (newDrawingEditor);
    fAnchorHandle = anchorHandle;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleTracker.java" startline="33" endline="36">
public void mouseDown (MouseEvent e, int x, int y) {
    super.mouseDown (e, x, y);
    fAnchorHandle.invokeStart (x, y, view ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleTracker.java" startline="38" endline="41">
public void mouseDrag (MouseEvent e, int x, int y) {
    super.mouseDrag (e, x, y);
    fAnchorHandle.invokeStep (x, y, getAnchorX (), getAnchorY (), view ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleTracker.java" startline="43" endline="46">
public void mouseUp (MouseEvent e, int x, int y) {
    super.mouseUp (e, x, y);
    fAnchorHandle.invokeEnd (x, y, getAnchorX (), getAnchorY (), view ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleTracker.java" startline="48" endline="51">
public void activate () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DeleteCommand.java" startline="30" endline="32">
public DeleteCommand (String name, DrawingEditor newDrawingEditor) {
    super (name, newDrawingEditor);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DeleteCommand.java" startline="34" endline="40">
public void execute () {
    super.execute ();
    setUndoActivity (createUndoActivity ());
    getUndoActivity ().setAffectedFigures (view ().selection ());
    deleteFigures (getUndoActivity ().getAffectedFigures ());
    view ().checkDamage ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DeleteCommand.java" startline="42" endline="44">
protected boolean isExecutableWithView () {
    return view ().selectionCount () > 0;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DeleteCommand.java" startline="49" endline="51">
protected Undoable createUndoActivity () {
    return new DeleteCommand.UndoActivity (this);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DeleteCommand.java" startline="56" endline="61">
public UndoActivity (FigureTransferCommand newCommand) {
    super (newCommand.view ());
    myCommand = newCommand;
    setUndoable (true);
    setRedoable (true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DeleteCommand.java" startline="63" endline="72">
public boolean undo () {
    if (super.undo () && getAffectedFigures ().hasNextFigure ()) {
        getDrawingView ().clearSelection ();
        setAffectedFigures (myCommand.insertFigures (getAffectedFigures (), 0, 0));
        return true;
    }
    return false;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DeleteCommand.java" startline="74" endline="84">
public boolean redo () {
    if (isRedoable ()) {
        myCommand.deleteFigures (getAffectedFigures ());
        getDrawingView ().clearSelection ();
        return true;
    }
    return false;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="32" endline="35">
public void moveBy (Figure f, Rectangle anchor) {
    Rectangle rr = f.displayBox ();
    f.moveBy (anchor.x - rr.x, 0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="42" endline="45">
public void moveBy (Figure f, Rectangle anchor) {
    Rectangle rr = f.displayBox ();
    f.moveBy ((anchor.x + anchor.width / 2) - (rr.x + rr.width / 2), 0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="52" endline="55">
public void moveBy (Figure f, Rectangle anchor) {
    Rectangle rr = f.displayBox ();
    f.moveBy ((anchor.x + anchor.width) - (rr.x + rr.width), 0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="62" endline="65">
public void moveBy (Figure f, Rectangle anchor) {
    Rectangle rr = f.displayBox ();
    f.moveBy (0, anchor.y - rr.y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="72" endline="75">
public void moveBy (Figure f, Rectangle anchor) {
    Rectangle rr = f.displayBox ();
    f.moveBy (0, (anchor.y + anchor.height / 2) - (rr.y + rr.height / 2));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="82" endline="85">
public void moveBy (Figure f, Rectangle anchor) {
    Rectangle rr = f.displayBox ();
    f.moveBy (0, (anchor.y + anchor.height) - (rr.y + rr.height));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="90" endline="92">
private Alignment (String newDescription) {
    setDescription (newDescription);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="94" endline="96">
public String toString () {
    return getDescription ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="98" endline="100">
public String getDescription () {
    return myDescription;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="102" endline="104">
private void setDescription (String newDescription) {
    myDescription = newDescription;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="116" endline="119">
public AlignCommand (Alignment newAlignment, DrawingEditor newDrawingEditor) {
    super (newAlignment.getDescription (), newDrawingEditor);
    setAlignment (newAlignment);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="121" endline="123">
protected boolean isExecutableWithView () {
    return view ().selectionCount () > 1;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="125" endline="132">
public void execute () {
    super.execute ();
    setUndoActivity (createUndoActivity ());
    getUndoActivity ().setAffectedFigures (view ().selection ());
    ((AlignCommand.UndoActivity) getUndoActivity ()).alignAffectedFigures (getAlignment ());
    view ().checkDamage ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="134" endline="136">
protected void setAlignment (Alignment newAlignment) {
    myAlignment = newAlignment;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="138" endline="140">
public Alignment getAlignment () {
    return myAlignment;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="145" endline="147">
protected Undoable createUndoActivity () {
    return new AlignCommand.UndoActivity (view (), getAlignment ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="153" endline="159">
public UndoActivity (DrawingView newView, Alignment newAlignment) {
    super (newView);
    myOriginalPoints = new Hashtable ();
    setAppliedAlignment (newAlignment);
    setUndoable (true);
    setRedoable (true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="161" endline="177">
public boolean undo () {
    if (! super.undo ()) {
        return false;
    }
    FigureEnumeration fe = getAffectedFigures ();
    while (fe.hasNextFigure ()) {
        Figure f = fe.nextFigure ();
        Point originalPoint = getOriginalPoint (f);
        Point currentPoint = f.displayBox ().getLocation ();
        f.moveBy (- currentPoint.x + originalPoint.x, - currentPoint.y + originalPoint.y);
    }
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="179" endline="185">
public boolean redo () {
    if (! isRedoable ()) {
        return false;
    }
    alignAffectedFigures (getAppliedAlignment ());
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="187" endline="189">
protected void setAppliedAlignment (Alignment newAlignment) {
    myAppliedAlignment = newAlignment;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="191" endline="193">
public Alignment getAppliedAlignment () {
    return myAppliedAlignment;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="195" endline="197">
protected void addOriginalPoint (Figure f) {
    myOriginalPoints.put (f, f.displayBox ().getLocation ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="199" endline="201">
public Point getOriginalPoint (Figure f) {
    return (Point) myOriginalPoints.get (f);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="203" endline="212">
public void alignAffectedFigures (Alignment applyAlignment) {
    FigureEnumeration fe = getAffectedFigures ();
    Figure anchorFigure = fe.nextFigure ();
    Rectangle r = anchorFigure.displayBox ();
    while (fe.hasNextFigure ()) {
        Figure f = fe.nextFigure ();
        applyAlignment.moveBy (f, r);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AlignCommand.java" startline="214" endline="222">
public void setAffectedFigures (FigureEnumeration fe) {
    super.setAffectedFigures (fe);
    FigureEnumeration copyFe = getAffectedFigures ();
    while (copyFe.hasNextFigure ()) {
        addOriginalPoint (copyFe.nextFigure ());
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DuplicateCommand.java" startline="29" endline="31">
public DuplicateCommand (String name, DrawingEditor newDrawingEditor) {
    super (name, newDrawingEditor);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DuplicateCommand.java" startline="33" endline="46">
public void execute () {
    super.execute ();
    setUndoActivity (createUndoActivity ());
    FigureSelection selection = view ().getFigureSelection ();
    FigureEnumeration figures = (FigureEnumeration) selection.getData (StandardFigureSelection.TYPE);
    getUndoActivity ().setAffectedFigures (figures);
    view ().clearSelection ();
    getUndoActivity ().setAffectedFigures (insertFigures (getUndoActivity ().getAffectedFigures (), 10, 10));
    view ().checkDamage ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DuplicateCommand.java" startline="48" endline="50">
protected boolean isExecutableWithView () {
    return view ().selectionCount () > 0;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/DuplicateCommand.java" startline="55" endline="57">
protected Undoable createUndoActivity () {
    return new PasteCommand.UndoActivity (view ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="39" endline="43">
protected ChangeConnectionHandle (Figure owner) {
    super (owner);
    setConnection ((ConnectionFigure) owner ());
    setTargetFigure (null);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="69" endline="74">
protected Connector source () {
    if (target () == getConnection ().getStartConnector ()) {
        return getConnection ().getEndConnector ();
    }
    return getConnection ().getStartConnector ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="79" endline="87">
public void invokeStart (int x, int y, DrawingView view) {
    fOriginalTarget = target ();
    fStart = new Point (x, y);
    setUndoActivity (createUndoActivity (view));
    ((ChangeConnectionHandle.UndoActivity) getUndoActivity ()).setOldConnector (target ());
    disconnect ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="92" endline="111">
public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Point p = new Point (x, y);
    Figure f = findConnectableFigure (x, y, view.drawing ());
    if (f != getTargetFigure ()) {
        if (getTargetFigure () != null) {
            getTargetFigure ().connectorVisibility (false, null);
        }
        setTargetFigure (f);
        if (getTargetFigure () != null) {
            getTargetFigure ().connectorVisibility (true, getConnection ());
        }
    }
    Connector target = findConnectionTarget (p.x, p.y, view.drawing ());
    if (target != null) {
        p = Geom.center (target.displayBox ());
    }
    setPoint (p.x, p.y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="117" endline="143">
public void invokeEnd (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Connector target = findConnectionTarget (x, y, view.drawing ());
    if (target == null) {
        target = fOriginalTarget;
    }
    setPoint (x, y);
    connect (target);
    getConnection ().updateConnection ();
    Connector oldConnector = ((ChangeConnectionHandle.UndoActivity) getUndoActivity ()).getOldConnector ();
    if ((oldConnector == null) || (target () == null) || (oldConnector.owner () == target ().owner ())) {
        setUndoActivity (null);
    } else {
        getUndoActivity ().setAffectedFigures (new SingleFigureEnumerator (getConnection ()));
    }
    if (getTargetFigure () != null) {
        getTargetFigure ().connectorVisibility (false, null);
        setTargetFigure (null);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="145" endline="155">
private Connector findConnectionTarget (int x, int y, Drawing drawing) {
    Figure target = findConnectableFigure (x, y, drawing);
    if ((target != null) && target.canConnect () && target != fOriginalTarget && ! target.includes (owner ()) && getConnection ().canConnect (source ().owner (), target)) {
        return findConnector (x, y, target);
    }
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="157" endline="159">
protected Connector findConnector (int x, int y, Figure f) {
    return f.connectorAt (x, y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="164" endline="172">
public void draw (Graphics g) {
    Rectangle r = displayBox ();
    g.setColor (Color.green);
    g.fillRect (r.x, r.y, r.width, r.height);
    g.setColor (Color.black);
    g.drawRect (r.x, r.y, r.width, r.height);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="174" endline="185">
private Figure findConnectableFigure (int x, int y, Drawing drawing) {
    FigureEnumeration fe = drawing.figuresReverse ();
    while (fe.hasNextFigure ()) {
        Figure figure = fe.nextFigure ();
        if (! figure.includes (getConnection ()) && figure.canConnect ()) {
            if (figure.containsPoint (x, y)) {
                return figure;
            }
        }
    }
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="187" endline="189">
protected void setConnection (ConnectionFigure newConnection) {
    myConnection = newConnection;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="191" endline="193">
protected ConnectionFigure getConnection () {
    return myConnection;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="195" endline="197">
protected void setTargetFigure (Figure newTarget) {
    myTarget = newTarget;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="199" endline="201">
protected Figure getTargetFigure () {
    return myTarget;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="211" endline="215">
public UndoActivity (DrawingView newView) {
    super (newView);
    setUndoable (true);
    setRedoable (true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="217" endline="224">
public boolean undo () {
    if (! super.undo ()) {
        return false;
    }
    swapConnectors ();
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="226" endline="234">
public boolean redo () {
    if (! isRedoable ()) {
        return false;
    }
    swapConnectors ();
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="236" endline="243">
private void swapConnectors () {
    FigureEnumeration fe = getAffectedFigures ();
    if (fe.hasNextFigure ()) {
        ConnectionFigure connection = (ConnectionFigure) fe.nextFigure ();
        setOldConnector (replaceConnector (connection));
        connection.updateConnection ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="247" endline="249">
public void setOldConnector (Connector newOldConnector) {
    myOldConnector = newOldConnector;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionHandle.java" startline="251" endline="253">
public Connector getOldConnector () {
    return myOldConnector;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeEventMulticaster.java" startline="27" endline="29">
public FigureChangeEventMulticaster (EventListener a, EventListener b) {
    super (a, b);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeEventMulticaster.java" startline="31" endline="34">
public void figureInvalidated (FigureChangeEvent e) {
    ((FigureChangeListener) a).figureInvalidated (e);
    ((FigureChangeListener) b).figureInvalidated (e);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeEventMulticaster.java" startline="36" endline="39">
public void figureRequestRemove (FigureChangeEvent e) {
    ((FigureChangeListener) a).figureRequestRemove (e);
    ((FigureChangeListener) b).figureRequestRemove (e);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeEventMulticaster.java" startline="41" endline="44">
public void figureRequestUpdate (FigureChangeEvent e) {
    ((FigureChangeListener) a).figureRequestUpdate (e);
    ((FigureChangeListener) b).figureRequestUpdate (e);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeEventMulticaster.java" startline="46" endline="49">
public void figureChanged (FigureChangeEvent e) {
    ((FigureChangeListener) a).figureChanged (e);
    ((FigureChangeListener) b).figureChanged (e);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeEventMulticaster.java" startline="51" endline="54">
public void figureRemoved (FigureChangeEvent e) {
    ((FigureChangeListener) a).figureRemoved (e);
    ((FigureChangeListener) b).figureRemoved (e);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeEventMulticaster.java" startline="56" endline="58">
public static FigureChangeListener add (FigureChangeListener a, FigureChangeListener b) {
    return (FigureChangeListener) addInternal (a, b);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeEventMulticaster.java" startline="61" endline="63">
public static FigureChangeListener remove (FigureChangeListener l, FigureChangeListener oldl) {
    return (FigureChangeListener) removeInternal (l, oldl);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeEventMulticaster.java" startline="65" endline="81">
protected EventListener remove (EventListener oldl) {
    if (oldl == a) {
        return b;
    }
    if (oldl == b) {
        return a;
    }
    EventListener a2 = removeInternal ((FigureChangeListener) a, oldl);
    EventListener b2 = removeInternal ((FigureChangeListener) b, oldl);
    if (a2 == a && b2 == b) {
        return this;
    } else {
        return addInternal ((FigureChangeListener) a2, (FigureChangeListener) b2);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeEventMulticaster.java" startline="83" endline="91">
protected static EventListener addInternal (FigureChangeListener a, FigureChangeListener b) {
    if (a == null) {
        return b;
    }
    if (b == null) {
        return a;
    }
    return new FigureChangeEventMulticaster (a, b);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeEventMulticaster.java" startline="93" endline="103">
protected static EventListener removeInternal (EventListener l, EventListener oldl) {
    if (l == oldl || l == null) {
        return null;
    } else if (l instanceof FigureChangeEventMulticaster) {
        return ((FigureChangeEventMulticaster) l).remove (oldl);
    } else {
        return l;
    }

}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="59" endline="62">
public CreationTool (DrawingEditor newDrawingEditor, Figure prototype) {
    super (newDrawingEditor);
    setPrototypeFigure (prototype);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="68" endline="70">
protected CreationTool (DrawingEditor newDrawingEditor) {
    this (newDrawingEditor, null);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="75" endline="80">
public void activate () {
    super.activate ();
    if (isUsable ()) {
        getActiveView ().setCursor (Cursor.getPredefinedCursor (Cursor.CROSSHAIR_CURSOR));
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="85" endline="90">
public void mouseDown (MouseEvent e, int x, int y) {
    super.mouseDown (e, x, y);
    setCreatedFigure (createFigure ());
    setAddedFigure (view ().add (getCreatedFigure ()));
    getAddedFigure ().displayBox (new Point (getAnchorX (), getAnchorY ()), new Point (getAnchorX (), getAnchorY ()));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="95" endline="100">
protected Figure createFigure () {
    if (getPrototypeFigure () == null) {
        throw new JHotDrawRuntimeException ("No protoype defined");
    }
    return (Figure) getPrototypeFigure ().clone ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="105" endline="109">
public void mouseDrag (MouseEvent e, int x, int y) {
    if (getAddedFigure () != null) {
        getAddedFigure ().displayBox (new Point (getAnchorX (), getAnchorY ()), new Point (x, y));
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="116" endline="134">
public void mouseUp (MouseEvent e, int x, int y) {
    if (getAddedFigure () != null) {
        if (getCreatedFigure ().isEmpty ()) {
            drawing ().remove (getAddedFigure ());
            setUndoActivity (null);
        } else {
            setUndoActivity (createUndoActivity ());
            getUndoActivity ().setAffectedFigures (new SingleFigureEnumerator (getAddedFigure ()));
        }
        setAddedFigure (null);
    }
    setCreatedFigure (null);
    editor ().toolDone ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="142" endline="144">
protected void setPrototypeFigure (Figure newPrototypeFigure) {
    myPrototypeFigure = newPrototypeFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="152" endline="154">
protected Figure getPrototypeFigure () {
    return myPrototypeFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="159" endline="161">
protected Figure getCreatedFigure () {
    return fCreatedFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="166" endline="168">
protected void setCreatedFigure (Figure newCreatedFigure) {
    fCreatedFigure = newCreatedFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="174" endline="176">
protected Figure getAddedFigure () {
    return myAddedFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="181" endline="183">
protected void setAddedFigure (Figure newAddedFigure) {
    myAddedFigure = newAddedFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CreationTool.java" startline="188" endline="190">
protected Undoable createUndoActivity () {
    return new PasteCommand.UndoActivity (view ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="32" endline="74">
public ToolButton (PaletteListener listener, String iconName, String name, Tool tool) {
    super (listener);
    tool.addToolListener (this);
    setEnabled (tool.isUsable ());
    Iconkit kit = Iconkit.instance ();
    if (kit == null) {
        throw new JHotDrawRuntimeException ("Iconkit instance isn't set");
    }
    Image im [] = new Image [3];
    im [0] = kit.loadImageResource (iconName + "1.gif");
    im [1] = kit.loadImageResource (iconName + "2.gif");
    im [2] = kit.loadImageResource (iconName + "3.gif");
    MediaTracker tracker = new MediaTracker (this);
    for (int i = 0;
    i < 3; i ++) {
        tracker.addImage (im [i], i);
    }
    try {
        tracker.waitForAll ();
    } catch (Exception e) {
    }
    setPaletteIcon (new PaletteIcon (new Dimension (24, 24), im [0], im [1], im [2]));
    setTool (tool);
    setName (name);
    if (im [0] != null) {
        setIcon (new ImageIcon (im [0]));
    }
    if (im [1] != null) {
        setPressedIcon (new ImageIcon (im [1]));
    }
    if (im [2] != null) {
        setSelectedIcon (new ImageIcon (im [2]));
    }
    setToolTipText (name);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="76" endline="78">
public Tool tool () {
    return myTool;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="80" endline="82">
public String name () {
    return getName ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="84" endline="86">
public Object attributeValue () {
    return tool ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="88" endline="90">
public Dimension getMinimumSize () {
    return new Dimension (getPaletteIcon ().getWidth (), getPaletteIcon ().getHeight ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="92" endline="94">
public Dimension getPreferredSize () {
    return new Dimension (getPaletteIcon ().getWidth (), getPaletteIcon ().getHeight ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="96" endline="98">
public Dimension getMaximumSize () {
    return new Dimension (getPaletteIcon ().getWidth (), getPaletteIcon ().getHeight ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="114" endline="118">
public void paintSelected (Graphics g) {
    if (getPaletteIcon ().selected () != null) {
        g.drawImage (getPaletteIcon ().selected (), 0, 0, this);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="120" endline="129">
public void paint (Graphics g) {
    if (isSelected ()) {
        paintSelected (g);
    } else {
        super.paint (g);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="131" endline="133">
public void toolUsable (EventObject toolEvent) {
    setEnabled (true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="135" endline="138">
public void toolUnusable (EventObject toolEvent) {
    setEnabled (false);
    setSelected (false);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="140" endline="141">
public void toolActivated (EventObject toolEvent) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="143" endline="144">
public void toolDeactivated (EventObject toolEvent) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="146" endline="148">
public void toolEnabled (EventObject toolEvent) {
    setEnabled (true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="150" endline="152">
public void toolDisabled (EventObject toolEvent) {
    setEnabled (false);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="154" endline="156">
protected PaletteIcon getPaletteIcon () {
    return myIcon;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="158" endline="160">
private void setPaletteIcon (PaletteIcon myIcon) {
    this.myIcon = myIcon;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToolButton.java" startline="162" endline="164">
private void setTool (Tool myTool) {
    this.myTool = myTool;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BufferedUpdateStrategy.java" startline="44" endline="59">
public void draw (Graphics g, DrawingView view) {
    Dimension d = view.getSize ();
    if ((fOffscreen == null) || (d.width != fImagewidth) || (d.height != fImageheight)) {
        fOffscreen = view.createImage (d.width, d.height);
        fImagewidth = d.width;
        fImageheight = d.height;
    }
    Graphics g2 = fOffscreen.getGraphics ();
    view.drawAll (g2);
    g.drawImage (fOffscreen, 0, 0, view);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/GridConstrainer.java" startline="30" endline="33">
public GridConstrainer (int x, int y) {
    fGridX = Math.max (1, x);
    fGridY = Math.max (1, y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/GridConstrainer.java" startline="39" endline="43">
public Point constrainPoint (Point p) {
    p.x = ((p.x + fGridX / 2) / fGridX) * fGridX;
    p.y = ((p.y + fGridY / 2) / fGridY) * fGridY;
    return p;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/GridConstrainer.java" startline="48" endline="50">
public int getStepX () {
    return fGridX;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/GridConstrainer.java" startline="55" endline="57">
public int getStepY () {
    return fGridY;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/LocatorHandle.java" startline="32" endline="35">
public LocatorHandle (Figure owner, Locator l) {
    super (owner);
    fLocator = l;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/LocatorHandle.java" startline="40" endline="42">
public Locator getLocator () {
    return fLocator;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/LocatorHandle.java" startline="48" endline="50">
public Point locate () {
    return fLocator.locate (owner ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="56" endline="60">
public StandardDrawing () {
    super ();
    fListeners = CollectionsFactory.current ().createList (2);
    init (new Rectangle (- 500, - 500, 2000, 2000));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="65" endline="70">
public void addDrawingChangeListener (DrawingChangeListener listener) {
    if (fListeners == null) {
        fListeners = CollectionsFactory.current ().createList (2);
    }
    fListeners.add (listener);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="75" endline="77">
public void removeDrawingChangeListener (DrawingChangeListener listener) {
    fListeners.remove (listener);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="82" endline="84">
public Iterator drawingChangeListeners () {
    return fListeners.iterator ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="93" endline="101">
public synchronized Figure orphan (Figure figure) {
    Figure orphanedFigure = super.orphan (figure);
    if (orphanedFigure.listener () != null) {
        Rectangle rect = invalidateRectangle (displayBox ());
        orphanedFigure.listener ().figureRequestRemove (new FigureChangeEvent (orphanedFigure, rect));
    }
    return orphanedFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="103" endline="111">
public synchronized Figure add (Figure figure) {
    Figure addedFigure = super.add (figure);
    if (addedFigure.listener () != null) {
        Rectangle rect = invalidateRectangle (displayBox ());
        addedFigure.listener ().figureRequestUpdate (new FigureChangeEvent (figure, rect));
        return addedFigure;
    }
    return addedFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="118" endline="125">
public void figureInvalidated (FigureChangeEvent e) {
    if (fListeners != null) {
        for (int i = 0;
        i < fListeners.size (); i ++) {
            DrawingChangeListener l = (DrawingChangeListener) fListeners.get (i);
            l.drawingInvalidated (new DrawingChangeEvent (this, e.getInvalidatedRectangle ()));
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="130" endline="137">
public void fireDrawingTitleChanged () {
    if (fListeners != null) {
        for (int i = 0;
        i < fListeners.size (); i ++) {
            DrawingChangeListener l = (DrawingChangeListener) fListeners.get (i);
            l.drawingTitleChanged (new DrawingChangeEvent (this, null));
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="142" endline="149">
public void figureRequestUpdate (FigureChangeEvent e) {
    if (fListeners != null) {
        for (int i = 0;
        i < fListeners.size (); i ++) {
            DrawingChangeListener l = (DrawingChangeListener) fListeners.get (i);
            l.drawingRequestUpdate (new DrawingChangeEvent (this, null));
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="155" endline="162">
public HandleEnumeration handles () {
    List handles = CollectionsFactory.current ().createList ();
    handles.add (new NullHandle (this, RelativeLocator.northWest ()));
    handles.add (new NullHandle (this, RelativeLocator.northEast ()));
    handles.add (new NullHandle (this, RelativeLocator.southWest ()));
    handles.add (new NullHandle (this, RelativeLocator.southEast ()));
    return new HandleEnumerator (handles);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="167" endline="179">
public Rectangle displayBox () {
    if (fFigures.size () > 0) {
        FigureEnumeration fe = figures ();
        Rectangle r = fe.nextFigure ().displayBox ();
        while (fe.hasNextFigure ()) {
            r.add (fe.nextFigure ().displayBox ());
        }
        return r;
    }
    return new Rectangle (0, 0, 0, 0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="181" endline="182">
public void basicDisplayBox (Point p1, Point p2) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="187" endline="200">
public synchronized void lock () {
    Thread current = Thread.currentThread ();
    if (fDrawingLockHolder == current) {
        return;
    }
    while (fDrawingLockHolder != null) {
        try {
            wait ();
        } catch (InterruptedException ex) {
        }
    }
    fDrawingLockHolder = current;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="205" endline="210">
public synchronized void unlock () {
    if (fDrawingLockHolder != null) {
        fDrawingLockHolder = null;
        notify ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="212" endline="218">
private void readObject (ObjectInputStream s) throws ClassNotFoundException, IOException {
    s.defaultReadObject ();
    fListeners = CollectionsFactory.current ().createList (2);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="220" endline="222">
public String getTitle () {
    return myTitle;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawing.java" startline="224" endline="226">
public void setTitle (String newTitle) {
    myTitle = newTitle;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionStartHandle.java" startline="30" endline="32">
public ChangeConnectionStartHandle (Figure owner) {
    super (owner);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionStartHandle.java" startline="37" endline="39">
protected Connector target () {
    return getConnection ().getStartConnector ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionStartHandle.java" startline="44" endline="46">
protected void disconnect () {
    getConnection ().disconnectStart ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionStartHandle.java" startline="51" endline="53">
protected void connect (Connector c) {
    getConnection ().connectStart (c);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionStartHandle.java" startline="58" endline="60">
protected void setPoint (int x, int y) {
    getConnection ().startPoint (x, y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionStartHandle.java" startline="65" endline="67">
public Point locate () {
    return getConnection ().startPoint ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionStartHandle.java" startline="72" endline="74">
protected Undoable createUndoActivity (DrawingView newView) {
    return new ChangeConnectionStartHandle.UndoActivity (newView);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionStartHandle.java" startline="77" endline="79">
public UndoActivity (DrawingView newView) {
    super (newView);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionStartHandle.java" startline="81" endline="85">
protected Connector replaceConnector (ConnectionFigure connection) {
    Connector tempStartConnector = connection.getStartConnector ();
    connection.connectStart (getOldConnector ());
    return tempStartConnector;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToggleGridCommand.java" startline="32" endline="35">
public ToggleGridCommand (String name, DrawingEditor newDrawingEditor, Point grid) {
    super (name, newDrawingEditor);
    fGrid = new Point (grid.x, grid.y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ToggleGridCommand.java" startline="37" endline="46">
public void execute () {
    super.execute ();
    PointConstrainer grid = view ().getConstrainer ();
    if (grid != null) {
        view ().setConstrainer (null);
    } else {
        view ().setConstrainer (new GridConstrainer (fGrid.x, fGrid.y));
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="37" endline="40">
public RelativeLocator () {
    fRelativeX = 0.0;
    fRelativeY = 0.0;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="42" endline="50">
public boolean equals (Object o) {
    if (RelativeLocator.class.isInstance (o)) {
        RelativeLocator rl = (RelativeLocator) o;
        if ((rl.fRelativeX) == fRelativeX && (rl.fRelativeY == fRelativeY)) {
            return true;
        }
    }
    return false;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="52" endline="55">
public RelativeLocator (double relativeX, double relativeY) {
    fRelativeX = relativeX;
    fRelativeY = relativeY;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="57" endline="63">
public Point locate (Figure owner) {
    Rectangle r = owner.displayBox ();
    return new Point (r.x + (int) (r.width * fRelativeX), r.y + (int) (r.height * fRelativeY));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="65" endline="69">
public void write (StorableOutput dw) {
    super.write (dw);
    dw.writeDouble (fRelativeX);
    dw.writeDouble (fRelativeY);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="71" endline="75">
public void read (StorableInput dr) throws IOException {
    super.read (dr);
    fRelativeX = dr.readDouble ();
    fRelativeY = dr.readDouble ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="77" endline="79">
static public Locator east () {
    return new RelativeLocator (1.0, 0.5);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="84" endline="86">
static public Locator north () {
    return new RelativeLocator (0.5, 0.0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="91" endline="93">
static public Locator west () {
    return new RelativeLocator (0.0, 0.5);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="98" endline="100">
static public Locator northEast () {
    return new RelativeLocator (1.0, 0.0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="105" endline="107">
static public Locator northWest () {
    return new RelativeLocator (0.0, 0.0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="112" endline="114">
static public Locator south () {
    return new RelativeLocator (0.5, 1.0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="119" endline="121">
static public Locator southEast () {
    return new RelativeLocator (1.0, 1.0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="126" endline="128">
static public Locator southWest () {
    return new RelativeLocator (0.0, 1.0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/RelativeLocator.java" startline="133" endline="135">
static public Locator center () {
    return new RelativeLocator (0.5, 0.5);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BringToFrontCommand.java" startline="31" endline="33">
public BringToFrontCommand (String name, DrawingEditor newDrawingEditor) {
    super (name, newDrawingEditor);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BringToFrontCommand.java" startline="35" endline="44">
public void execute () {
    super.execute ();
    setUndoActivity (createUndoActivity ());
    getUndoActivity ().setAffectedFigures (view ().selection ());
    FigureEnumeration fe = getUndoActivity ().getAffectedFigures ();
    while (fe.hasNextFigure ()) {
        view ().drawing ().bringToFront (fe.nextFigure ());
    }
    view ().checkDamage ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BringToFrontCommand.java" startline="46" endline="48">
public boolean isExecutableWithView () {
    return view ().selectionCount () > 0;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BringToFrontCommand.java" startline="50" endline="52">
protected Undoable createUndoActivity () {
    return new BringToFrontCommand.UndoActivity (view ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BringToFrontCommand.java" startline="55" endline="57">
public UndoActivity (DrawingView newDrawingView) {
    super (newDrawingView);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/BringToFrontCommand.java" startline="59" endline="61">
protected void sendToCommand (Figure f) {
    getDrawingView ().drawing ().bringToFront (f);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="38" endline="40">
public AbstractHandle (Figure owner) {
    fOwner = owner;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="50" endline="50">
public void invokeStart (int x, int y, Drawing drawing) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="57" endline="59">
public void invokeStart (int x, int y, DrawingView view) {
    invokeStart (x, y, view.drawing ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="69" endline="69">
public void invokeStep (int dx, int dy, Drawing drawing) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="78" endline="80">
public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view) {
    invokeStep (x - anchorX, y - anchorY, view.drawing ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="89" endline="91">
public void invokeEnd (int x, int y, int anchorX, int anchorY, DrawingView view) {
    invokeEnd (x - anchorX, y - anchorY, view.drawing ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="99" endline="99">
public void invokeEnd (int dx, int dy, Drawing drawing) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="104" endline="106">
public Figure owner () {
    return fOwner;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="111" endline="118">
public Rectangle displayBox () {
    Point p = locate ();
    return new Rectangle (p.x - HANDLESIZE / 2, p.y - HANDLESIZE / 2, HANDLESIZE, HANDLESIZE);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="123" endline="125">
public boolean containsPoint (int x, int y) {
    return displayBox ().contains (x, y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="130" endline="138">
public void draw (Graphics g) {
    Rectangle r = displayBox ();
    g.setColor (Color.white);
    g.fillRect (r.x, r.y, r.width, r.height);
    g.setColor (Color.black);
    g.drawRect (r.x, r.y, r.width, r.height);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="140" endline="142">
public Undoable getUndoActivity () {
    return myUndoableActivity;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractHandle.java" startline="144" endline="146">
public void setUndoActivity (Undoable newUndoableActivity) {
    myUndoableActivity = newUndoableActivity;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CopyCommand.java" startline="31" endline="33">
public CopyCommand (String name, DrawingEditor newDrawingEditor) {
    super (name, newDrawingEditor);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CopyCommand.java" startline="35" endline="38">
public void execute () {
    super.execute ();
    copyFigures (view ().selection (), view ().selectionCount ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CopyCommand.java" startline="40" endline="42">
protected boolean isExecutableWithView () {
    return view ().selectionCount () > 0;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureEnumerator.java" startline="33" endline="36">
public FigureEnumerator (Collection c) {
    myInitialCollection = c;
    reset ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureEnumerator.java" startline="42" endline="44">
public boolean hasNextFigure () {
    return myIterator.hasNext ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureEnumerator.java" startline="51" endline="53">
public Figure nextFigure () {
    return (Figure) myIterator.next ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureEnumerator.java" startline="55" endline="57">
public static FigureEnumeration getEmptyEnumeration () {
    return singletonEmptyEnumerator;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureEnumerator.java" startline="65" endline="67">
public void reset () {
    myIterator = myInitialCollection.iterator ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeAdapter.java" startline="26" endline="26">
public void figureInvalidated (FigureChangeEvent e) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeAdapter.java" startline="31" endline="31">
public void figureChanged (FigureChangeEvent e) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeAdapter.java" startline="36" endline="36">
public void figureRemoved (FigureChangeEvent e) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeAdapter.java" startline="41" endline="41">
public void figureRequestRemove (FigureChangeEvent e) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/FigureChangeAdapter.java" startline="47" endline="47">
public void figureRequestUpdate (FigureChangeEvent e) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleAndEnumerator.java" startline="28" endline="31">
public HandleAndEnumerator (HandleEnumeration newHE1, HandleEnumeration newHE2) {
    myHE1 = newHE1;
    myHE2 = newHE2;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleAndEnumerator.java" startline="33" endline="44">
public Handle nextHandle () {
    if (myHE1.hasNextHandle ()) {
        return myHE1.nextHandle ();
    } else if (myHE2.hasNextHandle ()) {
        return myHE2.nextHandle ();
    } else {
        return null;
    }

}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleAndEnumerator.java" startline="46" endline="48">
public boolean hasNextHandle () {
    return myHE1.hasNextHandle () || myHE2.hasNextHandle ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleAndEnumerator.java" startline="50" endline="54">
public List toList () {
    List joinedList = myHE1.toList ();
    joinedList.addAll (myHE2.toList ());
    return joinedList;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/HandleAndEnumerator.java" startline="56" endline="59">
public void reset () {
    myHE1.reset ();
    myHE2.reset ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractConnector.java" startline="44" endline="46">
public AbstractConnector () {
    fOwner = null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractConnector.java" startline="51" endline="53">
public AbstractConnector (Figure owner) {
    fOwner = owner;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractConnector.java" startline="61" endline="63">
public Figure owner () {
    return fOwner;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractConnector.java" startline="65" endline="67">
public Point findStart (ConnectionFigure connection) {
    return findPoint (connection);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractConnector.java" startline="69" endline="71">
public Point findEnd (ConnectionFigure connection) {
    return findPoint (connection);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractConnector.java" startline="78" endline="80">
protected Point findPoint (ConnectionFigure connection) {
    return Geom.center (displayBox ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractConnector.java" startline="85" endline="87">
public Rectangle displayBox () {
    return owner ().displayBox ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractConnector.java" startline="92" endline="94">
public boolean containsPoint (int x, int y) {
    return owner ().containsPoint (x, y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractConnector.java" startline="99" endline="101">
public void draw (Graphics g) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractConnector.java" startline="106" endline="108">
public void write (StorableOutput dw) {
    dw.writeStorable (owner ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractConnector.java" startline="113" endline="115">
public void read (StorableInput dr) throws IOException {
    fOwner = (Figure) dr.readStorable ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/AbstractConnector.java" startline="123" endline="125">
public void connectorVisibility (boolean isVisible, ConnectionFigure courtingConnection) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="55" endline="58">
public ConnectionHandle (Figure owner, Locator l, ConnectionFigure prototype) {
    super (owner, l);
    fPrototype = prototype;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="63" endline="69">
public void invokeStart (int x, int y, DrawingView view) {
    setConnection (createConnection ());
    Point p = locate ();
    getConnection ().startPoint (p.x, p.y);
    getConnection ().endPoint (p.x, p.y);
    view.drawing ().add (getConnection ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="74" endline="93">
public void invokeStep (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Point p = new Point (x, y);
    Figure f = findConnectableFigure (x, y, view.drawing ());
    if (f != getTargetFigure ()) {
        if (getTargetFigure () != null) {
            getTargetFigure ().connectorVisibility (false, null);
        }
        setTargetFigure (f);
        if (getTargetFigure () != null) {
            getTargetFigure ().connectorVisibility (true, getConnection ());
        }
    }
    Connector target = findConnectionTarget (p.x, p.y, view.drawing ());
    if (target != null) {
        p = Geom.center (target.displayBox ());
    }
    getConnection ().endPoint (p.x, p.y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="99" endline="114">
public void invokeEnd (int x, int y, int anchorX, int anchorY, DrawingView view) {
    Connector target = findConnectionTarget (x, y, view.drawing ());
    if (target != null) {
        getConnection ().connectStart (startConnector ());
        getConnection ().connectEnd (target);
        getConnection ().updateConnection ();
    } else {
        view.drawing ().remove (getConnection ());
    }
    setConnection (null);
    if (getTargetFigure () != null) {
        getTargetFigure ().connectorVisibility (false, null);
        setTargetFigure (null);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="116" endline="119">
private Connector startConnector () {
    Point p = locate ();
    return owner ().connectorAt (p.x, p.y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="125" endline="127">
protected ConnectionFigure createConnection () {
    return (ConnectionFigure) fPrototype.clone ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="132" endline="140">
protected Connector findConnectionTarget (int x, int y, Drawing drawing) {
    Figure target = findConnectableFigure (x, y, drawing);
    if ((target != null) && target.canConnect () && ! target.includes (owner ()) && getConnection ().canConnect (owner (), target)) {
        return findConnector (x, y, target);
    }
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="142" endline="152">
private Figure findConnectableFigure (int x, int y, Drawing drawing) {
    FigureEnumeration fe = drawing.figuresReverse ();
    while (fe.hasNextFigure ()) {
        Figure figure = fe.nextFigure ();
        if (! figure.includes (getConnection ()) && figure.canConnect () && figure.containsPoint (x, y)) {
            return figure;
        }
    }
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="154" endline="156">
protected Connector findConnector (int x, int y, Figure f) {
    return f.connectorAt (x, y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="163" endline="167">
public void draw (Graphics g) {
    Rectangle r = displayBox ();
    g.setColor (Color.blue);
    g.drawOval (r.x, r.y, r.width, r.height);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="169" endline="171">
protected void setConnection (ConnectionFigure newConnection) {
    myConnection = newConnection;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="173" endline="175">
protected ConnectionFigure getConnection () {
    return myConnection;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="177" endline="179">
protected Figure getTargetFigure () {
    return myTargetFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ConnectionHandle.java" startline="181" endline="183">
protected void setTargetFigure (Figure newTargetFigure) {
    myTargetFigure = newTargetFigure;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionEndHandle.java" startline="29" endline="31">
public ChangeConnectionEndHandle (Figure owner) {
    super (owner);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionEndHandle.java" startline="36" endline="38">
protected Connector target () {
    return getConnection ().getEndConnector ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionEndHandle.java" startline="43" endline="45">
protected void disconnect () {
    getConnection ().disconnectEnd ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionEndHandle.java" startline="50" endline="52">
protected void connect (Connector c) {
    getConnection ().connectEnd (c);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionEndHandle.java" startline="57" endline="59">
protected void setPoint (int x, int y) {
    getConnection ().endPoint (x, y);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionEndHandle.java" startline="64" endline="66">
public Point locate () {
    return getConnection ().endPoint ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionEndHandle.java" startline="71" endline="73">
protected Undoable createUndoActivity (DrawingView newView) {
    return new ChangeConnectionEndHandle.UndoActivity (newView);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionEndHandle.java" startline="76" endline="78">
public UndoActivity (DrawingView newView) {
    super (newView);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeConnectionEndHandle.java" startline="80" endline="84">
protected Connector replaceConnector (ConnectionFigure connection) {
    Connector tempEndConnector = connection.getEndConnector ();
    connection.connectEnd (getOldConnector ());
    return tempEndConnector;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="43" endline="45">
public QuadTree (Rectangle2D absoluteBoundingRectangle2D) {
    this (2, absoluteBoundingRectangle2D);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="47" endline="50">
public QuadTree (int nMaxTreeDepth, Rectangle2D absoluteBoundingRectangle2D) {
    _init (nMaxTreeDepth, absoluteBoundingRectangle2D);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="54" endline="113">
public void add (Object anObject, Rectangle2D absoluteBoundingRectangle2D) {
    if (_nMaxTreeDepth == 1) {
        if (absoluteBoundingRectangle2D.intersects (_absoluteBoundingRectangle2D)) {
            _theHashtable.put (anObject, absoluteBoundingRectangle2D);
        } else {
            _outsideHashtable.put (anObject, absoluteBoundingRectangle2D);
        }
        return;
    }
    boolean bNW = absoluteBoundingRectangle2D.intersects (_nwQuadTree.getAbsoluteBoundingRectangle2D ());
    boolean bNE = absoluteBoundingRectangle2D.intersects (_neQuadTree.getAbsoluteBoundingRectangle2D ());
    boolean bSW = absoluteBoundingRectangle2D.intersects (_swQuadTree.getAbsoluteBoundingRectangle2D ());
    boolean bSE = absoluteBoundingRectangle2D.intersects (_seQuadTree.getAbsoluteBoundingRectangle2D ());
    int nCount = 0;
    if (bNW == true) {
        nCount ++;
    }
    if (bNE == true) {
        nCount ++;
    }
    if (bSW == true) {
        nCount ++;
    }
    if (bSE == true) {
        nCount ++;
    }
    if (nCount > 1) {
        _theHashtable.put (anObject, absoluteBoundingRectangle2D);
        return;
    }
    if (nCount == 0) {
        _outsideHashtable.put (anObject, absoluteBoundingRectangle2D);
        return;
    }
    if (bNW == true) {
        _nwQuadTree.add (anObject, absoluteBoundingRectangle2D);
    }
    if (bNE == true) {
        _neQuadTree.add (anObject, absoluteBoundingRectangle2D);
    }
    if (bSW == true) {
        _swQuadTree.add (anObject, absoluteBoundingRectangle2D);
    }
    if (bSE == true) {
        _seQuadTree.add (anObject, absoluteBoundingRectangle2D);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="115" endline="149">
public Object remove (Object anObject) {
    Object returnObject = _theHashtable.remove (anObject);
    if (returnObject != null) {
        return returnObject;
    }
    if (_nMaxTreeDepth > 1) {
        returnObject = _nwQuadTree.remove (anObject);
        if (returnObject != null) {
            return returnObject;
        }
        returnObject = _neQuadTree.remove (anObject);
        if (returnObject != null) {
            return returnObject;
        }
        returnObject = _swQuadTree.remove (anObject);
        if (returnObject != null) {
            return returnObject;
        }
        returnObject = _seQuadTree.remove (anObject);
        if (returnObject != null) {
            return returnObject;
        }
    }
    returnObject = _outsideHashtable.remove (anObject);
    if (returnObject != null) {
        return returnObject;
    }
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="152" endline="161">
public void clear () {
    _theHashtable.clear ();
    _outsideHashtable.clear ();
    if (_nMaxTreeDepth > 1) {
        _nwQuadTree.clear ();
        _neQuadTree.clear ();
        _swQuadTree.clear ();
        _seQuadTree.clear ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="163" endline="165">
public int getMaxTreeDepth () {
    return _nMaxTreeDepth;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="182" endline="214">
public FigureEnumeration getAllWithin (Rectangle2D r) {
    List l = CollectionsFactory.current ().createList ();
    for (Iterator ii = _outsideHashtable.keySet ().iterator ();
    ii.hasNext ();) {
        Object anObject = ii.next ();
        Rectangle2D itsAbsoluteBoundingRectangle2D = (Rectangle2D) _outsideHashtable.get (anObject);
        if (itsAbsoluteBoundingRectangle2D.intersects (r)) {
            l.add (anObject);
        }
    }
    if (_absoluteBoundingRectangle2D.intersects (r)) {
        for (Iterator i = _theHashtable.keySet ().iterator ();
        i.hasNext ();) {
            Object anObject = i.next ();
            Rectangle2D itsAbsoluteBoundingRectangle2D = (Rectangle2D) _theHashtable.get (anObject);
            if (itsAbsoluteBoundingRectangle2D.intersects (r)) {
                l.add (anObject);
            }
        }
        if (_nMaxTreeDepth > 1) {
            l.add (_nwQuadTree.getAllWithin (r));
            l.add (_neQuadTree.getAllWithin (r));
            l.add (_swQuadTree.getAllWithin (r));
            l.add (_seQuadTree.getAllWithin (r));
        }
    }
    return new FigureEnumerator (l);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="216" endline="218">
public Rectangle2D getAbsoluteBoundingRectangle2D () {
    return _absoluteBoundingRectangle2D;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="222" endline="236">
private void _init (int nMaxTreeDepth, Rectangle2D absoluteBoundingRectangle2D) {
    _absoluteBoundingRectangle2D.setRect (absoluteBoundingRectangle2D);
    _nMaxTreeDepth = nMaxTreeDepth;
    if (_nMaxTreeDepth > 1) {
        _nwQuadTree = new QuadTree (_nMaxTreeDepth - 1, _makeNorthwest (absoluteBoundingRectangle2D));
        _neQuadTree = new QuadTree (_nMaxTreeDepth - 1, _makeNortheast (absoluteBoundingRectangle2D));
        _swQuadTree = new QuadTree (_nMaxTreeDepth - 1, _makeSouthwest (absoluteBoundingRectangle2D));
        _seQuadTree = new QuadTree (_nMaxTreeDepth - 1, _makeSoutheast (absoluteBoundingRectangle2D));
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="238" endline="240">
private Rectangle2D _makeNorthwest (Rectangle2D r) {
    return new Rectangle2D.Double (r.getX (), r.getY (), r.getWidth () / 2.0, r.getHeight () / 2.0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="242" endline="245">
private Rectangle2D _makeNortheast (Rectangle2D r) {
    return new Rectangle2D.Double (r.getX () + r.getWidth () / 2.0, r.getY (), r.getWidth () / 2.0, r.getHeight () / 2.0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="247" endline="250">
private Rectangle2D _makeSouthwest (Rectangle2D r) {
    return new Rectangle2D.Double (r.getX (), r.getY () + r.getHeight () / 2.0, r.getWidth () / 2.0, r.getHeight () / 2.0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/QuadTree.java" startline="252" endline="256">
private Rectangle2D _makeSoutheast (Rectangle2D r) {
    return new Rectangle2D.Double (r.getX () + r.getWidth () / 2.0, r.getY () + r.getHeight () / 2.0, r.getWidth () / 2.0, r.getHeight () / 2.0);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="36" endline="41">
public ChangeAttributeCommand (String name, FigureAttributeConstant attribute, Object value, DrawingEditor newDrawingEditor) {
    super (name, newDrawingEditor);
    fAttribute = attribute;
    fValue = value;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="43" endline="52">
public void execute () {
    super.execute ();
    setUndoActivity (createUndoActivity ());
    getUndoActivity ().setAffectedFigures (view ().selection ());
    FigureEnumeration fe = getUndoActivity ().getAffectedFigures ();
    while (fe.hasNextFigure ()) {
        fe.nextFigure ().setAttribute (fAttribute, fValue);
    }
    view ().checkDamage ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="54" endline="56">
public boolean isExecutableWithView () {
    return view ().selectionCount () > 0;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="61" endline="63">
protected Undoable createUndoActivity () {
    return new ChangeAttributeCommand.UndoActivity (view (), fAttribute, fValue);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="70" endline="77">
public UndoActivity (DrawingView newDrawingView, FigureAttributeConstant newUndoAttribute, Object newUndoValue) {
    super (newDrawingView);
    myOriginalValues = new Hashtable ();
    setAttribute (newUndoAttribute);
    setBackupValue (newUndoValue);
    setUndoable (true);
    setRedoable (true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="79" endline="93">
public boolean undo () {
    if (! super.undo ()) {
        return false;
    }
    FigureEnumeration fe = getAffectedFigures ();
    while (fe.hasNextFigure ()) {
        Figure f = fe.nextFigure ();
        if (getOriginalValue (f) != null) {
            f.setAttribute (getAttribute (), getOriginalValue (f));
        }
    }
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="95" endline="109">
public boolean redo () {
    if (! isRedoable ()) {
        return false;
    }
    FigureEnumeration fe = getAffectedFigures ();
    while (fe.hasNextFigure ()) {
        Figure f = fe.nextFigure ();
        if (getBackupValue () != null) {
            f.setAttribute (getAttribute (), getBackupValue ());
        }
    }
    return true;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="111" endline="113">
protected void addOriginalValue (Figure affectedFigure, Object newOriginalValue) {
    myOriginalValues.put (affectedFigure, newOriginalValue);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="115" endline="117">
protected Object getOriginalValue (Figure lookupAffectedFigure) {
    return myOriginalValues.get (lookupAffectedFigure);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="119" endline="121">
protected void setAttribute (FigureAttributeConstant newUndoAttribute) {
    myUndoAttribute = newUndoAttribute;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="123" endline="125">
public FigureAttributeConstant getAttribute () {
    return myUndoAttribute;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="127" endline="129">
protected void setBackupValue (Object newUndoValue) {
    myUndoValue = newUndoValue;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="131" endline="133">
public Object getBackupValue () {
    return myUndoValue;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="135" endline="138">
public void release () {
    super.release ();
    myOriginalValues = null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/ChangeAttributeCommand.java" startline="140" endline="152">
public void setAffectedFigures (FigureEnumeration fe) {
    super.setAffectedFigures (fe);
    FigureEnumeration copyFe = getAffectedFigures ();
    while (copyFe.hasNextFigure ()) {
        Figure f = copyFe.nextFigure ();
        Object attributeValue = f.getAttribute (getAttribute ());
        if (attributeValue != null) {
            addOriginalValue (f, attributeValue);
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CutCommand.java" startline="33" endline="35">
public CutCommand (String name, DrawingEditor newDrawingEditor) {
    super (name, newDrawingEditor);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CutCommand.java" startline="37" endline="45">
public void execute () {
    super.execute ();
    setUndoActivity (createUndoActivity ());
    getUndoActivity ().setAffectedFigures (view ().selection ());
    copyFigures (getUndoActivity ().getAffectedFigures (), view ().selectionCount ());
    deleteFigures (getUndoActivity ().getAffectedFigures ());
    view ().checkDamage ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CutCommand.java" startline="47" endline="49">
public boolean isExecutableWithView () {
    return view ().selectionCount () > 0;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CutCommand.java" startline="54" endline="56">
protected Undoable createUndoActivity () {
    return new CutCommand.UndoActivity (this);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CutCommand.java" startline="61" endline="66">
public UndoActivity (FigureTransferCommand newCommand) {
    super (newCommand.view ());
    myCommand = newCommand;
    setUndoable (true);
    setRedoable (true);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CutCommand.java" startline="68" endline="79">
public boolean undo () {
    if (super.undo () && getAffectedFigures ().hasNextFigure ()) {
        getDrawingView ().clearSelection ();
        setAffectedFigures (myCommand.insertFigures (getAffectedFigures (), 0, 0));
        return true;
    }
    return false;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/CutCommand.java" startline="81" endline="90">
public boolean redo () {
    if (isRedoable ()) {
        myCommand.copyFigures (getAffectedFigures (), getDrawingView ().selectionCount ());
        myCommand.deleteFigures (getAffectedFigures ());
        return true;
    }
    return false;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullTool.java" startline="26" endline="28">
public NullTool (DrawingEditor newDrawingEditor) {
    super (newDrawingEditor);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullTool.java" startline="30" endline="32">
public void activate () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullTool.java" startline="34" endline="36">
public void deactivate () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/NullTool.java" startline="38" endline="40">
protected void checkUsable () {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="132" endline="134">
public StandardDrawingView (DrawingEditor editor) {
    this (editor, MINIMUM_WIDTH, MINIMUM_HEIGHT);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="136" endline="156">
public StandardDrawingView (DrawingEditor editor, int width, int height) {
    setAutoscrolls (true);
    counter ++;
    fEditor = editor;
    fViewSize = new Dimension (width, height);
    setSize (width, height);
    fSelectionListeners = CollectionsFactory.current ().createList ();
    addFigureSelectionListener (editor ());
    setLastClick (new Point (0, 0));
    fConstrainer = null;
    fSelection = CollectionsFactory.current ().createList ();
    setDisplayUpdate (createDisplayUpdate ());
    setBackground (Color.lightGray);
    addMouseListener (createMouseListener ());
    addMouseMotionListener (createMouseMotionListener ());
    addKeyListener (createKeyListener ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="158" endline="160">
protected MouseListener createMouseListener () {
    return new DrawingViewMouseListener ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="162" endline="164">
protected MouseMotionListener createMouseMotionListener () {
    return new DrawingViewMouseMotionListener ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="166" endline="168">
protected KeyListener createKeyListener () {
    return new DrawingViewKeyListener ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="173" endline="176">
protected Painter createDisplayUpdate () {
    return new SimpleUpdateStrategy ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="181" endline="183">
public void setEditor (DrawingEditor editor) {
    fEditor = editor;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="188" endline="190">
public Tool tool () {
    return editor ().tool ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="195" endline="197">
public Drawing drawing () {
    return fDrawing;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="202" endline="215">
public void setDrawing (Drawing d) {
    if (drawing () != null) {
        clearSelection ();
        drawing ().removeDrawingChangeListener (this);
    }
    fDrawing = d;
    if (drawing () != null) {
        drawing ().addDrawingChangeListener (this);
    }
    checkMinimumSize ();
    repaint ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="220" endline="222">
public DrawingEditor editor () {
    return fEditor;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="228" endline="230">
public Figure add (Figure figure) {
    return drawing ().add (figure);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="236" endline="238">
public Figure remove (Figure figure) {
    return drawing ().remove (figure);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="243" endline="248">
public void addAll (Collection figures) {
    FigureEnumeration fe = new FigureEnumerator (figures);
    while (fe.hasNextFigure ()) {
        add (fe.nextFigure ());
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="253" endline="263">
public boolean figureExists (Figure inf, FigureEnumeration fe) {
    while (fe.hasNextFigure ()) {
        Figure figure = fe.nextFigure ();
        if (figure.includes (inf)) {
            return true;
        }
    }
    return false;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="272" endline="321">
public FigureEnumeration insertFigures (FigureEnumeration fe, int dx, int dy, boolean bCheck) {
    if (fe == null) {
        return FigureEnumerator.getEmptyEnumeration ();
    }
    List vCF = CollectionsFactory.current ().createList (10);
    InsertIntoDrawingVisitor visitor = new InsertIntoDrawingVisitor (drawing ());
    while (fe.hasNextFigure ()) {
        Figure figure = fe.nextFigure ();
        if (figure instanceof ConnectionFigure) {
            vCF.add (figure);
        } else if (figure != null) {
            figure.moveBy (dx, dy);
            figure.visit (visitor);
        }

    }
    FigureEnumeration ecf = new FigureEnumerator (vCF);
    while (ecf.hasNextFigure ()) {
        ConnectionFigure cf = (ConnectionFigure) ecf.nextFigure ();
        Figure sf = cf.startFigure ();
        Figure ef = cf.endFigure ();
        if (figureExists (sf, drawing ().figures ()) && figureExists (ef, drawing ().figures ()) && (! bCheck || cf.canConnect (sf, ef))) {
            if (bCheck) {
                Point sp = sf.center ();
                Point ep = ef.center ();
                Connector fStartConnector = cf.startFigure ().connectorAt (ep.x, ep.y);
                Connector fEndConnector = cf.endFigure ().connectorAt (sp.x, sp.y);
                if (fEndConnector != null && fStartConnector != null) {
                    cf.connectStart (fStartConnector);
                    cf.connectEnd (fEndConnector);
                    cf.updateConnection ();
                }
            }
            cf.visit (visitor);
        }
    }
    addToSelectionAll (visitor.getInsertedFigures ());
    return visitor.getInsertedFigures ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="326" endline="353">
public FigureEnumeration getConnectionFigures (Figure inFigure) {
    if (inFigure == null || ! inFigure.canConnect ()) {
        return null;
    }
    List result = CollectionsFactory.current ().createList (5);
    FigureEnumeration figures = drawing ().figures ();
    while (figures.hasNextFigure ()) {
        Figure f = figures.nextFigure ();
        if ((f instanceof ConnectionFigure) && ! (isFigureSelected (f))) {
            ConnectionFigure cf = (ConnectionFigure) f;
            if (cf.startFigure ().includes (inFigure) || cf.endFigure ().includes (inFigure)) {
                result.add (f);
            }
        }
    }
    return new FigureEnumerator (result);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="358" endline="360">
public Dimension getMinimumSize () {
    return fViewSize;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="365" endline="367">
public Dimension getPreferredSize () {
    return getMinimumSize ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="373" endline="375">
public void setDisplayUpdate (Painter updateStrategy) {
    fUpdateStrategy = updateStrategy;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="381" endline="383">
public Painter getDisplayUpdate () {
    return fUpdateStrategy;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="392" endline="394">
public FigureEnumeration selection () {
    return selectionZOrdered ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="402" endline="413">
public FigureEnumeration selectionZOrdered () {
    List result = CollectionsFactory.current ().createList (selectionCount ());
    FigureEnumeration figures = drawing ().figures ();
    while (figures.hasNextFigure ()) {
        Figure f = figures.nextFigure ();
        if (isFigureSelected (f)) {
            result.add (f);
        }
    }
    return new ReverseFigureEnumerator (result);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="418" endline="420">
public int selectionCount () {
    return fSelection.size ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="425" endline="427">
public boolean isFigureSelected (Figure checkFigure) {
    return fSelection.contains (checkFigure);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="433" endline="440">
public void addToSelection (Figure figure) {
    if (! isFigureSelected (figure) && drawing ().includes (figure)) {
        fSelection.add (figure);
        fSelectionHandles = null;
        figure.invalidate ();
        fireSelectionChanged ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="445" endline="447">
public void addToSelectionAll (Collection figures) {
    addToSelectionAll (new FigureEnumerator (figures));
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="452" endline="456">
public void addToSelectionAll (FigureEnumeration fe) {
    while (fe.hasNextFigure ()) {
        addToSelection (fe.nextFigure ());
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="461" endline="468">
public void removeFromSelection (Figure figure) {
    if (isFigureSelected (figure)) {
        fSelection.remove (figure);
        fSelectionHandles = null;
        figure.invalidate ();
        fireSelectionChanged ();
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="474" endline="482">
public void toggleSelection (Figure figure) {
    if (isFigureSelected (figure)) {
        removeFromSelection (figure);
    } else {
        addToSelection (figure);
    }
    fireSelectionChanged ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="487" endline="501">
public void clearSelection () {
    if (selectionCount () == 0) {
        return;
    }
    FigureEnumeration fe = selection ();
    while (fe.hasNextFigure ()) {
        fe.nextFigure ().invalidate ();
    }
    fSelection = CollectionsFactory.current ().createList ();
    fSelectionHandles = null;
    fireSelectionChanged ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="506" endline="519">
protected HandleEnumeration selectionHandles () {
    if (fSelectionHandles == null) {
        fSelectionHandles = CollectionsFactory.current ().createList ();
        FigureEnumeration fe = selection ();
        while (fe.hasNextFigure ()) {
            Figure figure = fe.nextFigure ();
            HandleEnumeration kk = figure.handles ();
            while (kk.hasNextHandle ()) {
                fSelectionHandles.add (kk.nextHandle ());
            }
        }
    }
    return new HandleEnumerator (fSelectionHandles);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="525" endline="527">
public FigureSelection getFigureSelection () {
    return new StandardFigureSelection (selectionZOrdered (), selectionCount ());
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="533" endline="544">
public Handle findHandle (int x, int y) {
    Handle handle;
    HandleEnumeration he = selectionHandles ();
    while (he.hasNextHandle ()) {
        handle = he.nextHandle ();
        if (handle.containsPoint (x, y)) {
            return handle;
        }
    }
    return null;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="551" endline="558">
protected void fireSelectionChanged () {
    if (fSelectionListeners != null) {
        for (int i = 0;
        i < fSelectionListeners.size (); i ++) {
            FigureSelectionListener l = (FigureSelectionListener) fSelectionListeners.get (i);
            l.figureSelectionChanged (this);
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="560" endline="562">
protected Rectangle getDamage () {
    return fDamage;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="564" endline="566">
protected void setDamage (Rectangle r) {
    fDamage = r;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="571" endline="573">
public Point lastClick () {
    return fLastClick;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="575" endline="577">
protected void setLastClick (Point newLastClick) {
    fLastClick = newLastClick;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="582" endline="584">
public void setConstrainer (PointConstrainer c) {
    fConstrainer = c;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="589" endline="591">
public PointConstrainer getConstrainer () {
    return fConstrainer;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="596" endline="608">
protected Point constrainPoint (Point p) {
    Dimension size = getSize ();
    p.x = Geom.range (1, size.width, p.x);
    p.y = Geom.range (1, size.height, p.y);
    if (fConstrainer != null) {
        return fConstrainer.constrainPoint (p);
    }
    return p;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="610" endline="616">
private void moveSelection (int dx, int dy) {
    FigureEnumeration figures = selection ();
    while (figures.hasNextFigure ()) {
        figures.nextFigure ().moveBy (dx, dy);
    }
    checkDamage ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="621" endline="629">
public synchronized void checkDamage () {
    Iterator each = drawing ().drawingChangeListeners ();
    while (each.hasNext ()) {
        Object l = each.next ();
        if (l instanceof DrawingView) {
            ((DrawingView) l).repairDamage ();
        }
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="631" endline="636">
public void repairDamage () {
    if (getDamage () != null) {
        repaint (getDamage ().x, getDamage ().y, getDamage ().width, getDamage ().height);
        setDamage (null);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="638" endline="650">
public void drawingInvalidated (DrawingChangeEvent e) {
    Rectangle r = e.getInvalidatedRectangle ();
    if (getDamage () == null) {
        setDamage (r);
    } else {
        Rectangle damagedR = getDamage ();
        damagedR.add (r);
        setDamage (damagedR);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="652" endline="654">
public void drawingRequestUpdate (DrawingChangeEvent e) {
    repairDamage ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="656" endline="657">
public void drawingTitleChanged (DrawingChangeEvent e) {
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="664" endline="666">
protected void paintComponent (Graphics g) {
    getDisplayUpdate ().draw (g, this);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="673" endline="686">
public void drawAll (Graphics g) {
    boolean isPrinting = g instanceof PrintGraphics;
    drawBackground (g);
    if ((fBackgrounds != null) && ! isPrinting) {
        drawPainters (g, fBackgrounds);
    }
    drawDrawing (g);
    if ((fForegrounds != null) && ! isPrinting) {
        drawPainters (g, fForegrounds);
    }
    if (! isPrinting) {
        drawHandles (g);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="694" endline="707">
public void draw (Graphics g, FigureEnumeration fe) {
    boolean isPrinting = g instanceof PrintGraphics;
    if ((fBackgrounds != null) && ! isPrinting) {
        drawPainters (g, fBackgrounds);
    }
    drawing ().draw (g, fe);
    if ((fForegrounds != null) && ! isPrinting) {
        drawPainters (g, fForegrounds);
    }
    if (! isPrinting) {
        drawHandles (g);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="712" endline="717">
public void drawHandles (Graphics g) {
    HandleEnumeration he = selectionHandles ();
    while (he.hasNextHandle ()) {
        (he.nextHandle ()).draw (g);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="722" endline="724">
public void drawDrawing (Graphics g) {
    drawing ().draw (g);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="731" endline="734">
public void drawBackground (Graphics g) {
    g.setColor (getBackground ());
    g.fillRect (0, 0, getBounds ().width, getBounds ().height);
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="736" endline="740">
protected void drawPainters (Graphics g, List v) {
    for (int i = 0;
    i < v.size (); i ++) {
        ((Painter) v.get (i)).draw (g, this);
    }
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="745" endline="751">
public void addBackground (Painter painter) {
    if (fBackgrounds == null) {
        fBackgrounds = CollectionsFactory.current ().createList (3);
    }
    fBackgrounds.add (painter);
    repaint ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="756" endline="761">
public void removeBackground (Painter painter) {
    if (fBackgrounds != null) {
        fBackgrounds.remove (painter);
    }
    repaint ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="763" endline="765">
protected List getBackgrounds () {
    return fBackgrounds;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="770" endline="775">
public void removeForeground (Painter painter) {
    if (fForegrounds != null) {
        fForegrounds.remove (painter);
    }
    repaint ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="780" endline="786">
public void addForeground (Painter painter) {
    if (fForegrounds == null) {
        fForegrounds = CollectionsFactory.current ().createList (3);
    }
    fForegrounds.add (painter);
    repaint ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="788" endline="790">
protected List getForegrounds () {
    return fForegrounds;
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="796" endline="798">
public void freezeView () {
    drawing ().lock ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="804" endline="806">
public void unfreezeView () {
    drawing ().unlock ();
}
</source>
<source file="/home/ubuntu/Webpage/app_collaborative_sci_workflow/workflow_outputs/test_workflow/JHotDraw54b1/src/CH/ifa/draw/standard/StandardDrawingView.java" startline="808" endline="818">
private void readObject (ObjectInputStream s) throws ClassNotFoundException, IOException {
    s.defaultReadObject ();
    fSelection = CollectionsFactory.current ().createList ();
    if (drawing () != null) {
        drawing ().addDrawingChangeListener (this);
    }
    fSelectionListeners = CollectionsFactory.current ().createList ();
}
</source>

</potential_clones>




